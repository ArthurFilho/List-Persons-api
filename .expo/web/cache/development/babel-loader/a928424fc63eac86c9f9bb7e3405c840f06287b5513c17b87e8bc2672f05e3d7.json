{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getCharacter, getNextCharacterPage, getCharacterId } from \"../../component/api/rick-and-morty\";\nimport UserScreen from \"../../contexts/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CharDetailScreen = function CharDetailScreen(props) {\n  var id = props.route.params.id;\n  var _useState = useState({\n      name: \"\",\n      origin: {},\n      location: {}\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    character = _useState2[0],\n    setCharacter = _useState2[1];\n  var navigation = props.navigation;\n  useEffect(function () {\n    buscar(id);\n  }, []);\n  function buscar(_x) {\n    return _buscar.apply(this, arguments);\n  }\n  function _buscar() {\n    _buscar = _asyncToGenerator(function* (id) {\n      var c = yield getCharacterId(id);\n      setCharacter(c.data);\n    });\n    return _buscar.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    children: [_jsx(UserScreen, {}), _jsxs(View, {\n      style: styles.characterContainer,\n      children: [_jsx(Image, {\n        style: styles.characterImage,\n        source: {\n          uri: character.image\n        }\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: character.name\n        }), _jsx(Text, {\n          children: character.status\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: character.species\n        }), _jsx(Text, {\n          children: character.type\n        }), _jsx(Text, {\n          children: character.gender\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(\"touchable opacity pressed\");\n          if (character.origin.url) {\n            navigation.navigate(\"LocationDetail\", {\n              url: character.origin.url\n            });\n          }\n        },\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            children: character.origin.name\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log(\"touchable opacity pressed\");\n          if (character.location.url) {\n            navigation.navigate(\"LocationDetail\", {\n              url: character.location.url\n            });\n          }\n        },\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            children: character.location.name\n          })\n        })\n      })]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        navigation.navigate(\"EpisodeDetail\", {\n          urls: character.episode\n        });\n      },\n      title: \"EPISODES\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  characterContainer: {\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    margin: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#CCCCCC\",\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default CharDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Button","View","Image","Text","FlatList","TextInput","TouchableOpacity","getCharacter","getNextCharacterPage","getCharacterId","UserScreen","jsx","_jsx","jsxs","_jsxs","CharDetailScreen","props","id","route","params","_useState","name","origin","location","_useState2","_slicedToArray","character","setCharacter","navigation","buscar","_x","_buscar","apply","arguments","_asyncToGenerator","c","data","children","style","styles","characterContainer","characterImage","source","uri","image","status","species","type","gender","onPress","console","log","url","navigate","urls","episode","title","create","mainView","justifyContent","padding","backgroundColor","flexDirection","alignItems","margin","width","height","marginRight","textInput","borderWidth","borderColor","marginVertical"],"sources":["/Users/amandacastilho/Desktop/00-atv5/src/screens/char-detail/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n StyleSheet,\n  Button,\n  View,\n  Image,\n  Text,\n  FlatList,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  getCharacter,\n  getNextCharacterPage,\n  getCharacterId,\n} from \"../../component/api/rick-and-morty\";\nimport UserScreen from '../../contexts/userContext'\n\nconst CharDetailScreen = (props) => {\n  const id = props.route.params.id;\n  const [character, setCharacter] = useState({\n    name: \"\",\n    origin: {},\n    location: {},\n  });\n  const navigation = props.navigation;\n  useEffect(() => {\n    buscar(id);\n  }, []);\n  async function buscar(id) {\n    const c = await getCharacterId(id);\n    setCharacter(c.data);\n  }\n\n  return (\n    <View>\n      <UserScreen/>\n      <View style={styles.characterContainer}>\n        <Image\n          style={styles.characterImage}\n          source={{ uri: character.image }}\n        />\n        <View>\n          <Text>{character.name}</Text>\n          <Text>{character.status}</Text>\n        </View>\n        <View>\n          <Text>{character.species}</Text>\n          <Text>{character.type}</Text>\n          <Text>{character.gender}</Text>\n        </View>\n\n        <TouchableOpacity\n          onPress={() => {\n            console.log(\"touchable opacity pressed\");\n            if (character.origin.url) {\n              navigation.navigate(\"LocationDetail\", {\n                url: character.origin.url,\n              });\n            }\n          }}\n        >\n          <View>\n            <Text>{character.origin.name}</Text>\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          onPress={() => {\n            console.log(\"touchable opacity pressed\");\n            if (character.location.url) {\n              navigation.navigate(\"LocationDetail\", {\n                url: character.location.url,\n              });\n            }\n          }}\n        >\n          <View>\n            <Text>{character.location.name}</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      <Button\n        onPress={() => {\n          navigation.navigate(\"EpisodeDetail\", { urls: character.episode });\n        }}\n        title=\"EPISODES\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  characterContainer: {\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    margin: 5,\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10,\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#CCCCCC\",\n    height: 35,\n    padding: 5,\n  },\n  marginVertical: {\n    marginVertical: 5,\n  },\n});\n\nexport default CharDetailScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}