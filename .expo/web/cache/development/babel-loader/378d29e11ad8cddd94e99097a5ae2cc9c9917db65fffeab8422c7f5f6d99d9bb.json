{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getEspisodes } from \"../../component/api/rick-and-morty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EpisodeDetailScreen = function EpisodeDetailScreen(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    episodes = _useState2[0],\n    setEpisodes = _useState2[1];\n  var navigation = props.navigation;\n  var urls = props.route.params.urls;\n  function buscar(_x) {\n    return _buscar.apply(this, arguments);\n  }\n  function _buscar() {\n    _buscar = _asyncToGenerator(function* (list) {\n      list.forEach(function () {\n        var _ref = _asyncToGenerator(function* (url, i) {\n          var u = url.replace('https://rickandmortyapi.com/api/episode/', '');\n          var ep = yield getEspisodes(u);\n          console.log(ep);\n          setEpisodes([].concat(_toConsumableArray(episodes), [ep.data]));\n        });\n        return function (_x2, _x3) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n    return _buscar.apply(this, arguments);\n  }\n  useEffect(function () {\n    buscar(urls);\n  }, []);\n  return _jsx(View, {\n    style: styles.characterContainer,\n    children: episodes.forEach(function (episode, i) {\n      return _jsxs(View, {\n        children: [_jsx(Image, {\n          source: {\n            uri: episode.url\n          }\n        }), _jsx(Text, {\n          children: episode.name\n        }), _jsx(Text, {\n          children: episode.air_date\n        }), _jsx(Text, {\n          children: episode.episode\n        }), _jsx(Button, {\n          title: \"characters\",\n          onPress: function onPress() {\n            return navigation.navigate('MainScreen', {\n              characters: episode.characters\n            });\n          }\n        })]\n      });\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default EpisodeDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Button","Text","Image","getEspisodes","jsx","_jsx","jsxs","_jsxs","EpisodeDetailScreen","props","_useState","_useState2","_slicedToArray","episodes","setEpisodes","navigation","urls","route","params","buscar","_x","_buscar","apply","arguments","_asyncToGenerator","list","forEach","_ref","url","i","u","replace","ep","console","log","concat","_toConsumableArray","data","_x2","_x3","style","styles","characterContainer","children","episode","source","uri","name","air_date","title","onPress","navigate","characters","create","mainView","justifyContent","padding","backgroundColor","flexDirection","alignItems","marginVertical","characterImage","width","height","marginRight","textInput","borderWidth","borderColor"],"sources":["/Users/amandacastilho/Desktop/react-native-web-lessons-main 2/00-atv4/src/screens/episode-detail/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { StyleSheet, View, Button, Text, Image} from 'react-native'\nimport { getEspisodes } from '../../component/api/rick-and-morty'\n\nconst EpisodeDetailScreen = (props) => {\n  const [episodes, setEpisodes] = useState([]) \n  const navigation = props.navigation \n const urls = props.route.params.urls\n async function buscar(list){\n  list.forEach(async (url, i) => {\n    const u = url.replace('https://rickandmortyapi.com/api/episode/', '')\n    const ep = await getEspisodes(u)\n    console.log(ep)\n    setEpisodes([\n      ...episodes,\n      ep.data,\n    ])\n  })\n}\nuseEffect(() => {\n  buscar(urls)\n}, [])\n\n  return (\n\n    <View style={styles.characterContainer}>\n          {episodes.forEach((episode, i) => (\n        <View>\n          <Image source={{ uri: episode.url }} />\n          <Text>{episode.name}</Text>\n          <Text>{episode.air_date}</Text>\n          <Text>{episode.episode}</Text>\n          <Button\n            title=\"characters\"\n            onPress={() => navigation.navigate('MainScreen', { characters: episode.characters })}\n          />\n        </View>\n      )) \n      }\n          \n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n})\n\nexport default EpisodeDetailScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}