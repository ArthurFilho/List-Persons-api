{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { getCharacter, getNextCharacterPage } from \"../../component/api/rick-and-morty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CharDetailScreen = function CharDetailScreen(props) {\n  _jsxs(View, {\n    children: [_jsx(\"text\", {\n      children: \"pagina\"\n    }), _jsx(FlatList, {\n      style: styles.marginVertical,\n      data: characters,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(element) {\n        var character = element.item;\n        return _jsxs(View, {\n          style: styles.characterContainer,\n          children: [_jsx(Image, {\n            style: styles.characterImage,\n            source: {\n              uri: character.image\n            }\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              children: character.name\n            }), _jsx(Text, {\n              children: character.status\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              children: character.species\n            }), _jsx(Text, {\n              children: character.type\n            }), _jsx(Text, {\n              children: character.gender\n            })]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsx(View, {\n              children: _jsx(Text, {\n                children: character.origin\n              })\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsx(View, {\n              children: _jsx(Text, {\n                children: character.location\n              })\n            })\n          })]\n        });\n      }\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        navigation.navigate('EpisodeDetailScreen');\n      },\n      title: \"EPISODES\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default CharDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Button","View","Image","Text","FlatList","TextInput","getCharacter","getNextCharacterPage","jsx","_jsx","jsxs","_jsxs","CharDetailScreen","props","children","style","styles","marginVertical","data","characters","keyExtractor","item","id","renderItem","element","character","characterContainer","characterImage","source","uri","image","name","status","species","type","gender","TouchableOpacity","onPress","origin","location","navigation","navigate","title","create","mainView","justifyContent","padding","backgroundColor","flexDirection","alignItems","width","height","marginRight","textInput","borderWidth","borderColor"],"sources":["/Users/amandacastilho/Desktop/react-native-web-lessons-main 2/00-atv4/src/screens/char-detail/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Button, View, Image, Text, FlatList, TextInput } from 'react-native'\nimport { getCharacter, getNextCharacterPage } from '../../component/api/rick-and-morty'\n\nconst CharDetailScreen = (props) => {\n\n    <View>\n\n    <text>pagina</text>\n\n    <FlatList\n        style={styles.marginVertical}\n        data={characters}\n        keyExtractor={(item) => item.id}\n        renderItem={(element) => {\n          const character = element.item\n\n          return (\n            <View style={styles.characterContainer}>\n              <Image style={styles.characterImage} source={{ uri: character.image }} />\n              <View >\n                <Text>{character.name}</Text>\n                <Text>{character.status}</Text>\n              </View>\n              <View> \n                <Text>{character.species}</Text>\n                <Text>{character.type}</Text>\n                <Text>{character.gender}</Text>\n              </View>\n\n              <TouchableOpacity\n            onPress={() => {}}> \n               <View>\n                <Text>{character.origin}</Text>\n                </View> \n               </TouchableOpacity>\n\n               <TouchableOpacity\n            onPress={() => {}}> \n              <View>\n                <Text>{character.location}</Text>\n                </View> \n                </TouchableOpacity>\n                \n            </View>\n          )\n        }}\n      />\n    \n    <Button\n          onPress={() => { navigation.navigate('EpisodeDetailScreen') }}\n          title=\"EPISODES\" />\n\n    </View>\n\n}\n\nconst styles = StyleSheet.create({\n    mainView: {\n      justifyContent: 'center',\n      padding: 10,\n      backgroundColor: 'white'\n    },\n    characterContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginVertical: 5\n    },\n    characterImage: {\n      width: 90,\n      height: 90,\n      marginRight: 10\n    },\n    textInput: {\n      borderWidth: 1,\n      borderColor: '#CCCCCC',\n      height: 35,\n      padding: 5\n    },\n    marginVertical: {\n      marginVertical: 5\n    }\n  })\n\nexport default CharDetailScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}