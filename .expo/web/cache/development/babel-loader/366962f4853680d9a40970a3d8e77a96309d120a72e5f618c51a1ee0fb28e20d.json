{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DetailScreen = function DetailScreen(props) {\n  var navigation = props.navigation;\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    character = _useContext.character,\n    HandleFavorite = _useContext.HandleFavorite,\n    active = _useContext.active;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    films = _useState2[0],\n    setFilms = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    homeWorld = _useState4[0],\n    setHomeWorld = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    starShips = _useState6[0],\n    setStarShips = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    species = _useState8[0],\n    setSpecies = _useState8[1];\n  if (!componentStyle) {\n    return null;\n  }\n  function FilmsLoad() {\n    return _FilmsLoad.apply(this, arguments);\n  }\n  function _FilmsLoad() {\n    _FilmsLoad = _asyncToGenerator(function* () {\n      try {\n        var filmPromises = person.films.map(function (filmUrl) {\n          return axios.get(filmUrl);\n        });\n        var filmResponses = yield Promise.all(filmPromises);\n        var _films = filmResponses.map(function (response) {\n          return response.data;\n        });\n        setFilms(_films);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _FilmsLoad.apply(this, arguments);\n  }\n  function HomeWorldLoad() {\n    return _HomeWorldLoad.apply(this, arguments);\n  }\n  function _HomeWorldLoad() {\n    _HomeWorldLoad = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(person.homeworld);\n        var homeWorldData = response.data;\n        setHomeWorld(homeWorldData);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _HomeWorldLoad.apply(this, arguments);\n  }\n  function StarShipsLoad() {\n    return _StarShipsLoad.apply(this, arguments);\n  }\n  function _StarShipsLoad() {\n    _StarShipsLoad = _asyncToGenerator(function* () {\n      try {\n        var starShipsPromises = person.starships.map(function (startShipsUrl) {\n          return axios.get(startShipsUrl);\n        });\n        var starShipsResponses = yield Promise.all(starShipsPromises);\n        var _starShips = starShipsResponses.map(function (response) {\n          return response.data;\n        });\n        setStarShips(_starShips);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _StarShipsLoad.apply(this, arguments);\n  }\n  function SpeciesLoad() {\n    return _SpeciesLoad.apply(this, arguments);\n  }\n  function _SpeciesLoad() {\n    _SpeciesLoad = _asyncToGenerator(function* () {\n      try {\n        if (person.species && person.species.length > 0) {\n          var response = yield axios.get(person.species[0]);\n          var speciesData = response.data;\n          setSpecies(speciesData);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _SpeciesLoad.apply(this, arguments);\n  }\n  useEffect(function () {\n    CharacterLoad();\n  }, [character]);\n  useEffect(function () {\n    if (person.films) {\n      FilmsLoad();\n      HomeWorldLoad();\n      StarShipsLoad();\n      SpeciesLoad();\n    }\n  }, [person]);\n  return _jsxs(View, {\n    style: [styles.mainView, componentStyle.theme.mainView],\n    children: [_jsx(Text, {\n      style: [styles.textTittle, componentStyle.theme.text],\n      children: \"Detalhes do personagem\"\n    }), person.name ? _jsxs(View, {\n      children: [_jsxs(Text, {\n        style: [styles.textDescription, componentStyle.theme.text],\n        children: [\" Nome: \", person.name, \" \"]\n      }), _jsxs(Text, {\n        style: [styles.textDescription, componentStyle.theme.text],\n        children: [\" Nasceu: \", homeWorld == '' ? null : homeWorld.name, \" \"]\n      }), starShips.length == 0 ? null : _jsxs(Text, {\n        style: [styles.textDescription, componentStyle.theme.text],\n        children: [\" StarShips: \", starShips.map(function (ship) {\n          return ship.name;\n        }).join(', '), \" \"]\n      }), _jsxs(Text, {\n        style: [styles.textDescription, componentStyle.theme.text],\n        children: [\" Filmes: \", films.map(function (film) {\n          return film.title;\n        }).join(', '), \" \"]\n      }), species.name == 'Droid' ? _jsxs(Text, {\n        style: [styles.textDescription, componentStyle.theme.text],\n        children: [\" Esp\\xE9cie: \", species.name, \" \"]\n      }) : null, _jsxs(View, {\n        style: styles.viewButton,\n        children: [active == true ? _jsx(Button, {\n          onPress: function onPress() {\n            HandleFavorite(person);\n          },\n          color: componentStyle.buttonColor,\n          title: \"Adicionar aos favoritos\"\n        }) : _jsx(Button, {\n          onPress: function onPress() {\n            HandleFavorite(person);\n          },\n          color: componentStyle.buttonColor,\n          title: \"Remover dos favoritos\"\n        }), _jsx(Button, {\n          color: componentStyle.buttonColor,\n          style: styles.containerCard,\n          onPress: function onPress() {\n            return navigation.navigate('favoriteScreen');\n          },\n          title: \"Ver pagina\"\n        }, person.url)]\n      })]\n    }) : _jsx(Text, {\n      children: \"Loading...\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    alignItems: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20\n  },\n  textDescription: {\n    fontSize: 20\n  },\n  viewButton: {\n    gap: 10\n  }\n});\nexport default DetailScreen;","map":{"version":3,"names":["React","useContext","useEffect","useState","StyleSheet","View","Text","Button","stylesTheme","UserContext","axios","jsx","_jsx","jsxs","_jsxs","DetailScreen","props","navigation","_useContext","theme","character","HandleFavorite","active","componentStyle","_useState","_useState2","_slicedToArray","films","setFilms","_useState3","_useState4","homeWorld","setHomeWorld","_useState5","_useState6","starShips","setStarShips","_useState7","_useState8","species","setSpecies","FilmsLoad","_FilmsLoad","apply","arguments","_asyncToGenerator","filmPromises","person","map","filmUrl","get","filmResponses","Promise","all","response","data","error","console","HomeWorldLoad","_HomeWorldLoad","homeworld","homeWorldData","StarShipsLoad","_StarShipsLoad","starShipsPromises","starships","startShipsUrl","starShipsResponses","SpeciesLoad","_SpeciesLoad","length","speciesData","CharacterLoad","style","styles","mainView","children","textTittle","text","name","textDescription","ship","join","film","title","viewButton","onPress","color","buttonColor","containerCard","navigate","url","create","alignItems","padding","fontSize","marginBottom","gap"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/detailScreen/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { StyleSheet, View, Text, Button } from 'react-native'\nimport stylesTheme from '../../styles';\nimport { UserContext } from '../../contexts/userContext';\nimport axios from 'axios';\n\nconst DetailScreen = (props) => {\n\n  const navigation = props.navigation\n\n  const { theme, character, HandleFavorite, active } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  const [films, setFilms] = useState([])\n  const [homeWorld, setHomeWorld] = useState([])\n  const [starShips, setStarShips] = useState([])\n  const [species, setSpecies] = useState([])\n  \n  if (!componentStyle) {\n    return null; \n  }\n\nasync function FilmsLoad() {\n  try {\n    const filmPromises = person.films.map(filmUrl => axios.get(filmUrl));\n    const filmResponses = await Promise.all(filmPromises);\n    const films = filmResponses.map(response => response.data);\n    setFilms(films);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function HomeWorldLoad() {\n  try {\n    const response = await axios.get(person.homeworld);\n    const homeWorldData = response.data;\n    setHomeWorld(homeWorldData);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function StarShipsLoad() {\n  try {\n    const starShipsPromises = person.starships.map(startShipsUrl => axios.get(startShipsUrl));\n    const starShipsResponses = await Promise.all(starShipsPromises);\n    const starShips = starShipsResponses.map(response => response.data);\n    setStarShips(starShips);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function SpeciesLoad() {\n  try {\n    if (person.species && person.species.length > 0) {\n      const response = await axios.get(person.species[0]);\n      const speciesData = response.data;\n      setSpecies(speciesData);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nuseEffect(() => {\n  CharacterLoad()\n},[character])\n\nuseEffect(() => {\n  if (person.films) {\n    FilmsLoad();\n    HomeWorldLoad();\n    StarShipsLoad();\n    SpeciesLoad();\n  }\n}, [person]);\n\n  return (\n    <View style={[styles.mainView, componentStyle.theme.mainView]}>\n      <Text style={[styles.textTittle, componentStyle.theme.text]}>\n       Detalhes do personagem\n      </Text>\n      {person.name ? (\n      <View>\n        <Text style={[styles.textDescription, componentStyle.theme.text]}> Nome: {person.name} </Text>\n        <Text style={[styles.textDescription, componentStyle.theme.text]}> Nasceu: {homeWorld == '' ? null : homeWorld.name} </Text>\n        {starShips.length == 0 ? null : <Text style={[styles.textDescription, componentStyle.theme.text]}> StarShips: {starShips.map((ship) => ship.name).join(', ')} </Text>}\n        <Text style={[styles.textDescription, componentStyle.theme.text]}> Filmes: {films.map((film) => film.title).join(', ')} </Text>\n        {species.name == 'Droid' ? <Text style={[styles.textDescription, componentStyle.theme.text]}> Espécie: {species.name} </Text> : null } \n        <View style={styles.viewButton}> \n            {active == true ? \n          <Button onPress={()=> {HandleFavorite(person)}} color={componentStyle.buttonColor} title='Adicionar aos favoritos' />   \n          :\n          <Button onPress={()=> {HandleFavorite(person)}} color={componentStyle.buttonColor} title='Remover dos favoritos' />\n          }\n            <Button color={componentStyle.buttonColor} style={styles.containerCard} key={person.url} onPress={() => {return (navigation.navigate('favoriteScreen'))}} title='Ver pagina' />\n        </View>\n      </View>\n    ) : (\n      <Text>Loading...</Text> \n    )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    alignItems: 'center',\n    padding: 50,\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20,\n  },\n  textDescription: {\n    fontSize: 20,\n  },\n  viewButton: {\n    gap: 10,\n  }\n})\n\nexport default DetailScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}