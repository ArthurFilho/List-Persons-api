{"ast":null,"code":"import React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SearchScreen = function SearchScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    characters = _useContext.characters;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  function getCharacterByName(name) {\n    return characters.find(function (character) {\n      return character.name === name;\n    });\n  }\n  return _jsxs(View, {\n    style: [styles.mainView, componentStyle.theme.mainView],\n    children: [_jsx(TextInput, {\n      onChange: function onChange(e) {\n        getCharacterByName(e.target.value);\n      },\n      style: [styles.textInput, componentStyle.theme.text],\n      placeholder: \"O que voc\\xEA quer?\"\n    }), _jsx(Button, {\n      title: \"Buscar\",\n      onPress: function onPress() {\n        return getCharacterByName(searchValue);\n      }\n    }), searchResult && _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Personagem encontrado:\"\n      }), _jsxs(Text, {\n        children: [\"Nome: \", searchResult.name]\n      }), _jsxs(Text, {\n        children: [\"Idade: \", searchResult.age]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  mainView: {\n    padding: 50\n  }\n});\nexport default SearchScreen;","map":{"version":3,"names":["React","useContext","StyleSheet","View","TextInput","stylesTheme","UserContext","jsx","_jsx","jsxs","_jsxs","SearchScreen","_useContext","theme","characters","componentStyle","getCharacterByName","name","find","character","style","styles","mainView","children","onChange","e","target","value","textInput","text","placeholder","Button","title","onPress","searchValue","searchResult","Text","age","create","borderWidth","borderColor","height","padding"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/searchScreen/index.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { StyleSheet, View, TextInput } from 'react-native'\nimport stylesTheme from '../../styles';\nimport { UserContext } from '../../contexts/userContext';\n\nconst SearchScreen = () => {\n\n  const { theme, characters } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n  \n  function getCharacterByName(name) {\n    return characters.find(character => character.name === name);\n  }\n\n  return (\n    <View style={[styles.mainView, componentStyle.theme.mainView]}>\n      <TextInput onChange={(e)=> {getCharacterByName(e.target.value)}} style={[styles.textInput, componentStyle.theme.text]} placeholder='O que você quer?' />\n    \n      <Button title=\"Buscar\" onPress={() => getCharacterByName(searchValue)} />\n\n      {searchResult && (\n        <View>\n          <Text>Personagem encontrado:</Text>\n          <Text>Nome: {searchResult.name}</Text>\n          <Text>Idade: {searchResult.age}</Text>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5,\n  },\n  mainView: {\n    padding: 50,\n  }\n})\n\nexport default SearchScreen"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAEzC,OAAOC,WAAW;AAClB,SAASC,WAAW;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAEzB,IAAAC,WAAA,GAA8BX,UAAU,CAACK,WAAW,CAAC;IAA7CO,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,WAAA,CAAVE,UAAU;EAEzB,IAAMC,cAAc,GAAGF,KAAK,GAAGR,WAAW,CAACQ,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACE,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,SAASC,kBAAkBA,CAACC,IAAI,EAAE;IAChC,OAAOH,UAAU,CAACI,IAAI,CAAC,UAAAC,SAAS;MAAA,OAAIA,SAAS,CAACF,IAAI,KAAKA,IAAI;IAAA,EAAC;EAC9D;EAEA,OACEP,KAAA,CAACP,IAAI;IAACiB,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAEP,cAAc,CAACF,KAAK,CAACS,QAAQ,CAAE;IAAAC,QAAA,GAC5Df,IAAA,CAACJ,SAAS;MAACoB,QAAQ,EAAE,SAAAA,SAACC,CAAC,EAAI;QAACT,kBAAkB,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA,CAAE;MAACP,KAAK,EAAE,CAACC,MAAM,CAACO,SAAS,EAAEb,cAAc,CAACF,KAAK,CAACgB,IAAI,CAAE;MAACC,WAAW,EAAC;IAAkB,EAAG,EAExJtB,IAAA,CAACuB,MAAM;MAACC,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMjB,kBAAkB,CAACkB,WAAW,CAAC;MAAA;IAAC,EAAG,EAExEC,YAAY,IACXzB,KAAA,CAACP,IAAI;MAAAoB,QAAA,GACHf,IAAA,CAAC4B,IAAI;QAAAb,QAAA,EAAC;MAAsB,EAAO,EACnCb,KAAA,CAAC0B,IAAI;QAAAb,QAAA,GAAC,QAAM,EAACY,YAAY,CAAClB,IAAI;MAAA,EAAQ,EACtCP,KAAA,CAAC0B,IAAI;QAAAb,QAAA,GAAC,SAAO,EAACY,YAAY,CAACE,GAAG;MAAA,EAAQ;IAAA,EAEzC;EAAA,EACI;AAEX,CAAC;AAED,IAAMhB,MAAM,GAAGnB,UAAU,CAACoC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC;EACDpB,QAAQ,EAAE;IACRoB,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAe/B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}