{"ast":null,"code":"import React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ThemeScreen from \"../../component/theme\";\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar settingScreen = function settingScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    languages = _useContext.languages,\n    ButtonChangeLanguage = _useContext.ButtonChangeLanguage;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: [styles.mainView, componentStyle.theme.mainView],\n    children: [_jsx(Text, {\n      style: [styles.textTittle, componentStyle.theme.text],\n      children: languages == true ? Configurações : 'Settings'\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(ThemeScreen, {}), _jsx(Button, {\n        title: languages == true ? 'Português' : 'Inglês',\n        color: componentStyle.buttonColor,\n        onPress: function onPress() {\n          return ButtonChangeLanguage();\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20\n  },\n  buttonsContainer: {\n    gap: 10\n  }\n});\nexport default settingScreen;","map":{"version":3,"names":["React","useContext","useState","StyleSheet","Text","View","Button","ThemeScreen","stylesTheme","UserContext","jsx","_jsx","jsxs","_jsxs","settingScreen","_useContext","theme","languages","ButtonChangeLanguage","componentStyle","style","styles","mainView","children","textTittle","text","Configurações","buttonsContainer","title","color","buttonColor","onPress","create","justifyContent","padding","fontSize","marginBottom","gap"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/settingsScreen/index.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { StyleSheet, Text, View, Button} from 'react-native'\nimport ThemeScreen from '../../component/theme'\nimport stylesTheme from '../../styles'\nimport { UserContext } from '../../contexts/userContext'\n\nconst settingScreen = () => {\n\n  const { theme, languages, ButtonChangeLanguage } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n\n  return (\n    <View style={[styles.mainView, componentStyle.theme.mainView]}>\n      <Text style={[styles.textTittle, componentStyle.theme.text]}>{languages == true ? Configurações : 'Settings'}</Text>\n      <View style={styles.buttonsContainer}>\n      <ThemeScreen />\n        <Button\n          title={languages == true ? 'Português' : 'Inglês'}\n          color={componentStyle.buttonColor}\n          onPress={() => ButtonChangeLanguage()}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20,\n  },\n  buttonsContainer: {\n    gap: 10,\n  },\n})\n\nexport default settingScreen"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnD,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAClB,SAASC,WAAW;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAE1B,IAAAC,WAAA,GAAmDd,UAAU,CAACQ,WAAW,CAAC;IAAlEO,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,SAAS,GAAAF,WAAA,CAATE,SAAS;IAAEC,oBAAoB,GAAAH,WAAA,CAApBG,oBAAoB;EAE9C,IAAMC,cAAc,GAAGH,KAAK,GAAGR,WAAW,CAACQ,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACG,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACEN,KAAA,CAACR,IAAI;IAACe,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAEH,cAAc,CAACH,KAAK,CAACM,QAAQ,CAAE;IAAAC,QAAA,GAC5DZ,IAAA,CAACP,IAAI;MAACgB,KAAK,EAAE,CAACC,MAAM,CAACG,UAAU,EAAEL,cAAc,CAACH,KAAK,CAACS,IAAI,CAAE;MAAAF,QAAA,EAAEN,SAAS,IAAI,IAAI,GAAGS,aAAa,GAAG;IAAU,EAAQ,EACpHb,KAAA,CAACR,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACM,gBAAiB;MAAAJ,QAAA,GACrCZ,IAAA,CAACJ,WAAW,KAAG,EACbI,IAAA,CAACL,MAAM;QACLsB,KAAK,EAAEX,SAAS,IAAI,IAAI,GAAG,WAAW,GAAG,QAAS;QAClDY,KAAK,EAAEV,cAAc,CAACW,WAAY;QAClCC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMb,oBAAoB,EAAE;QAAA;MAAC,EACtC;IAAA,EACG;EAAA,EACF;AAEX,CAAC;AAED,IAAMG,MAAM,GAAGlB,UAAU,CAAC6B,MAAM,CAAC;EAC/BV,QAAQ,EAAE;IACRW,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDV,UAAU,EAAE;IACVW,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDT,gBAAgB,EAAE;IAChBU,GAAG,EAAE;EACP;AACF,CAAC,CAAC;AAEF,eAAevB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}