{"ast":null,"code":"import React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ThemeScreen from \"../../component/theme\";\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar settingScreen = function settingScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    fontSize = _useContext.fontSize,\n    ButtonChangeFontSmall = _useContext.ButtonChangeFontSmall,\n    ButtonChangeFontDefault = _useContext.ButtonChangeFontDefault,\n    ButtonChangeFontGiant = _useContext.ButtonChangeFontGiant;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: [styles.mainView, componentStyle.theme.mainView],\n    children: [_jsx(Text, {\n      style: [styles.textTittle, componentStyle.theme.text],\n      children: \"Configura\\xE7\\xF5es\"\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(ThemeScreen, {}), _jsx(Button, {\n        title: \"Small\",\n        color: componentStyle.buttonColor,\n        onPress: function onPress() {\n          return ButtonChangeFontSmall('fontSmall');\n        },\n        style: styles.fontSize\n      }), _jsx(Button, {\n        title: \"Default\",\n        color: componentStyle.buttonColor,\n        onPress: function onPress() {\n          return ButtonChangeFontDefault('fontDefault');\n        },\n        style: fontSize === 'fontDefault' ? styles.activeButton : null\n      }), _jsx(Button, {\n        title: \"Giant\",\n        color: componentStyle.buttonColor,\n        onPress: function onPress() {\n          return ButtonChangeFontGiant('fontGiant');\n        },\n        style: fontSize === 'fontGiant' ? styles.activeButton : null\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20\n  },\n  buttonsContainer: {\n    gap: 10\n  }\n});\nexport default settingScreen;","map":{"version":3,"names":["React","useContext","useState","StyleSheet","Text","View","Button","ThemeScreen","stylesTheme","UserContext","jsx","_jsx","jsxs","_jsxs","settingScreen","_useContext","theme","fontSize","ButtonChangeFontSmall","ButtonChangeFontDefault","ButtonChangeFontGiant","componentStyle","style","styles","mainView","children","textTittle","text","buttonsContainer","title","color","buttonColor","onPress","activeButton","create","justifyContent","padding","marginBottom","gap"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/settingsScreen/index.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { StyleSheet, Text, View, Button} from 'react-native'\nimport ThemeScreen from '../../component/theme'\nimport stylesTheme from '../../styles'\nimport { UserContext } from '../../contexts/userContext'\n\nconst settingScreen = () => {\n\n  const { theme, fontSize, ButtonChangeFontSmall, ButtonChangeFontDefault, ButtonChangeFontGiant } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n\n  return (\n    <View style={[styles.mainView, componentStyle.theme.mainView]}>\n      <Text style={[styles.textTittle, componentStyle.theme.text]}>Configurações</Text>\n      <View style={styles.buttonsContainer}>\n      <ThemeScreen />\n      <Button\n          title=\"Small\"\n          color={componentStyle.buttonColor}\n          onPress={() => ButtonChangeFontSmall('fontSmall')}\n          style={styles.fontSize}\n        />\n        <Button\n          title=\"Default\"\n          color={componentStyle.buttonColor}\n          onPress={() => ButtonChangeFontDefault('fontDefault')}\n          style={fontSize === 'fontDefault' ? styles.activeButton : null}\n        />\n        <Button\n          title=\"Giant\"\n          color={componentStyle.buttonColor}\n          onPress={() => ButtonChangeFontGiant('fontGiant')}\n          style={fontSize === 'fontGiant' ? styles.activeButton : null}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20,\n  },\n  buttonsContainer: {\n    gap: 10,\n  }\n})\n\nexport default settingScreen"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnD,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAClB,SAASC,WAAW;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAE1B,IAAAC,WAAA,GAAmGd,UAAU,CAACQ,WAAW,CAAC;IAAlHO,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;IAAEC,qBAAqB,GAAAH,WAAA,CAArBG,qBAAqB;IAAEC,uBAAuB,GAAAJ,WAAA,CAAvBI,uBAAuB;IAAEC,qBAAqB,GAAAL,WAAA,CAArBK,qBAAqB;EAE9F,IAAMC,cAAc,GAAGL,KAAK,GAAGR,WAAW,CAACQ,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACK,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACER,KAAA,CAACR,IAAI;IAACiB,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAEH,cAAc,CAACL,KAAK,CAACQ,QAAQ,CAAE;IAAAC,QAAA,GAC5Dd,IAAA,CAACP,IAAI;MAACkB,KAAK,EAAE,CAACC,MAAM,CAACG,UAAU,EAAEL,cAAc,CAACL,KAAK,CAACW,IAAI,CAAE;MAAAF,QAAA,EAAC;IAAa,EAAO,EACjFZ,KAAA,CAACR,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACK,gBAAiB;MAAAH,QAAA,GACrCd,IAAA,CAACJ,WAAW,KAAG,EACfI,IAAA,CAACL,MAAM;QACHuB,KAAK,EAAC,OAAO;QACbC,KAAK,EAAET,cAAc,CAACU,WAAY;QAClCC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMd,qBAAqB,CAAC,WAAW,CAAC;QAAA,CAAC;QAClDI,KAAK,EAAEC,MAAM,CAACN;MAAS,EACvB,EACFN,IAAA,CAACL,MAAM;QACLuB,KAAK,EAAC,SAAS;QACfC,KAAK,EAAET,cAAc,CAACU,WAAY;QAClCC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMb,uBAAuB,CAAC,aAAa,CAAC;QAAA,CAAC;QACtDG,KAAK,EAAEL,QAAQ,KAAK,aAAa,GAAGM,MAAM,CAACU,YAAY,GAAG;MAAK,EAC/D,EACFtB,IAAA,CAACL,MAAM;QACLuB,KAAK,EAAC,OAAO;QACbC,KAAK,EAAET,cAAc,CAACU,WAAY;QAClCC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMZ,qBAAqB,CAAC,WAAW,CAAC;QAAA,CAAC;QAClDE,KAAK,EAAEL,QAAQ,KAAK,WAAW,GAAGM,MAAM,CAACU,YAAY,GAAG;MAAK,EAC7D;IAAA,EACG;EAAA,EACF;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGpB,UAAU,CAAC+B,MAAM,CAAC;EAC/BV,QAAQ,EAAE;IACRW,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDV,UAAU,EAAE;IACVT,QAAQ,EAAE,EAAE;IACZoB,YAAY,EAAE;EAChB,CAAC;EACDT,gBAAgB,EAAE;IAChBU,GAAG,EAAE;EACP;AACF,CAAC,CAAC;AAEF,eAAexB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}