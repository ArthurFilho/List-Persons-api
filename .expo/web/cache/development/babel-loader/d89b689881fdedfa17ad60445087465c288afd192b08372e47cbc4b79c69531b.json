{"ast":null,"code":"import StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport CharDetailScreen from \"./src/screens/char-detail\";\nimport MainScreen from \"./src/screens/main-screen\";\nimport EpisodeDetailScreen from \"./src/screens/episode-detail\";\nimport LocationDetailScreen from \"./src/screens/location-detail\";\nimport LoginPage from \"./src/screens/login\";\nimport { UserProvider } from \"./src/contexts/userContext\";\nimport ThemeScreen from \"./src/screens/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(UserProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginPage,\n          options: {\n            headerRight: function headerRight() {\n              return _jsx(ThemeScreen, {});\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainScreen,\n          options: {\n            headerRight: function headerRight() {\n              return _jsx(ThemeScreen, {});\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"CharDetail\",\n          component: CharDetailScreen,\n          options: {\n            headerRight: function headerRight() {\n              return _jsx(ThemeScreen, {});\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"EpisodeDetail\",\n          component: EpisodeDetailScreen,\n          options: {\n            headerRight: function headerRight() {\n              return _jsx(ThemeScreen, {});\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"LocationDetail\",\n          component: LocationDetailScreen,\n          options: {\n            headerRight: function headerRight() {\n              return _jsx(ThemeScreen, {});\n            }\n          }\n        })]\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","NavigationContainer","CharDetailScreen","MainScreen","EpisodeDetailScreen","LocationDetailScreen","LoginPage","UserProvider","ThemeScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","Screen","name","component","options","headerRight","StatusBar","style"],"sources":["C:/Users/Meu Computador/Desktop/00-atv5 - c√≥pia/App.js"],"sourcesContent":["import { StatusBar } from 'react-native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { NavigationContainer } from '@react-navigation/native'\nimport CharDetailScreen from './src/screens/char-detail'\nimport MainScreen from './src/screens/main-screen'\nimport EpisodeDetailScreen from './src/screens/episode-detail'\nimport LocationDetailScreen from './src/screens/location-detail'\nimport LoginPage from './src/screens/login'\nimport { UserProvider } from './src/contexts/userContext'\nimport ThemeScreen from './src/screens/theme'\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App() {\n  return (\n    <UserProvider>\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Login\" component={LoginPage} options={{headerRight: () => <ThemeScreen />,}} />\n        <Stack.Screen name=\"Main\" component={MainScreen} options={{headerRight: () => <ThemeScreen />,}} />\n        <Stack.Screen name=\"CharDetail\" component={CharDetailScreen} options={{headerRight: () => <ThemeScreen />,}} />\n        <Stack.Screen name=\"EpisodeDetail\" component={EpisodeDetailScreen} options={{headerRight: () => <ThemeScreen />,}} />\n        <Stack.Screen name=\"LocationDetail\" component={LocationDetailScreen} options={{headerRight: () => <ThemeScreen />,}} />\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n    </UserProvider>\n  )\n}"],"mappings":";AACA,SAASA,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,gBAAgB;AACvB,OAAOC,UAAU;AACjB,OAAOC,mBAAmB;AAC1B,OAAOC,oBAAoB;AAC3B,OAAOC,SAAS;AAChB,SAASC,YAAY;AACrB,OAAOC,WAAW;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,KAAK,GAAGb,0BAA0B,EAAE;AAE1C,eAAe,SAASc,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACH,YAAY;IAAAQ,QAAA,EACbH,KAAA,CAACX,mBAAmB;MAAAc,QAAA,GAClBH,KAAA,CAACC,KAAK,CAACG,SAAS;QAAAD,QAAA,GACdL,IAAA,CAACG,KAAK,CAACI,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAEb,SAAU;UAACc,OAAO,EAAE;YAACC,WAAW,EAAE,SAAAA,YAAA;cAAA,OAAMX,IAAA,CAACF,WAAW,KAAG;YAAA;UAAC;QAAE,EAAG,EACnGE,IAAA,CAACG,KAAK,CAACI,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEhB,UAAW;UAACiB,OAAO,EAAE;YAACC,WAAW,EAAE,SAAAA,YAAA;cAAA,OAAMX,IAAA,CAACF,WAAW,KAAG;YAAA;UAAC;QAAE,EAAG,EACnGE,IAAA,CAACG,KAAK,CAACI,MAAM;UAACC,IAAI,EAAC,YAAY;UAACC,SAAS,EAAEjB,gBAAiB;UAACkB,OAAO,EAAE;YAACC,WAAW,EAAE,SAAAA,YAAA;cAAA,OAAMX,IAAA,CAACF,WAAW,KAAG;YAAA;UAAC;QAAE,EAAG,EAC/GE,IAAA,CAACG,KAAK,CAACI,MAAM;UAACC,IAAI,EAAC,eAAe;UAACC,SAAS,EAAEf,mBAAoB;UAACgB,OAAO,EAAE;YAACC,WAAW,EAAE,SAAAA,YAAA;cAAA,OAAMX,IAAA,CAACF,WAAW,KAAG;YAAA;UAAC;QAAE,EAAG,EACrHE,IAAA,CAACG,KAAK,CAACI,MAAM;UAACC,IAAI,EAAC,gBAAgB;UAACC,SAAS,EAAEd,oBAAqB;UAACe,OAAO,EAAE;YAACC,WAAW,EAAE,SAAAA,YAAA;cAAA,OAAMX,IAAA,CAACF,WAAW,KAAG;YAAA;UAAC;QAAE,EAAG;MAAA,EACvG,EAClBE,IAAA,CAACY,SAAS;QAACC,KAAK,EAAC;MAAM,EAAG;IAAA;EACN,EACP;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}