{"ast":null,"code":"import React, { useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { Clipboard } from '@phosphor-icons/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar favoriteScreen = function favoriteScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    favorite = _useContext.favorite,\n    getDataFavorite = _useContext.getDataFavorite;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  useEffect(function () {\n    getDataFavorite();\n  }, []);\n  return _jsxs(View, {\n    style: [componentStyle.theme.mainView, styles.mainView],\n    children: [_jsx(Text, {\n      style: [componentStyle.theme.text, styles.textTittle],\n      children: \" Personagens favoritos \"\n    }), favorite.length == 0 ? _jsxs(View, {\n      style: styles.favView,\n      children: [_jsx(Text, {\n        style: styles.textDescription,\n        children: \" Nenhum favorito encontrado \"\n      }), _jsx(Clipboard, {\n        size: 100\n      })]\n    }) : favorite.map(function (fav) {\n      return _jsx(View, {\n        children: _jsxs(Text, {\n          style: [componentStyle.theme.text, styles.textDescription],\n          children: [\" \", fav.name, \" \"]\n        })\n      });\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    alignItems: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20\n  },\n  textDescription: {\n    fontSize: 20\n  },\n  favView: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n});\nexport default favoriteScreen;","map":{"version":3,"names":["React","useContext","useEffect","StyleSheet","View","Text","stylesTheme","UserContext","Clipboard","jsx","_jsx","jsxs","_jsxs","favoriteScreen","_useContext","theme","favorite","getDataFavorite","componentStyle","style","mainView","styles","children","text","textTittle","length","favView","textDescription","size","map","fav","name","create","alignItems","padding","fontSize","marginBottom","flexDirection"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/favoritesScreen/index.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport stylesTheme from '../../styles';\nimport { UserContext } from '../../contexts/userContext';\nimport { Clipboard } from '@phosphor-icons/react';\n\n\nconst favoriteScreen = () => {\n\n  const { theme, favorite, getDataFavorite } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n  useEffect(()=> {\n    getDataFavorite()\n  },[])\n\n  return (\n    <View style={[componentStyle.theme.mainView, styles.mainView]}>\n      <Text style={[componentStyle.theme.text, styles.textTittle]}> Personagens favoritos </Text>\n\n      {favorite.length == 0 ? \n        <View style={styles.favView}>\n          <Text style={styles.textDescription}> Nenhum favorito encontrado </Text>\n          <Clipboard size={100} />\n        </View>\n        :\n        favorite.map((fav)=> { return(\n          <View>\n            <Text style={[componentStyle.theme.text, styles.textDescription]}> {fav.name} </Text>\n          </View>)})\n        }\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    alignItems: 'center',\n    padding: 50,\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20,\n  },\n  textDescription: {\n    fontSize: 20,\n  },\n  favView: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n})\n\nexport default favoriteScreen"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEpD,OAAOC,WAAW;AAClB,SAASC,WAAW;AACpB,SAASC,SAAS,QAAQ,uBAAuB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGlD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAE3B,IAAAC,WAAA,GAA6Cb,UAAU,CAACM,WAAW,CAAC;IAA5DQ,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;IAAEC,eAAe,GAAAH,WAAA,CAAfG,eAAe;EAExC,IAAMC,cAAc,GAAGH,KAAK,GAAGT,WAAW,CAACS,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACG,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EACAhB,SAAS,CAAC,YAAK;IACbe,eAAe,EAAE;EACnB,CAAC,EAAC,EAAE,CAAC;EAEL,OACEL,KAAA,CAACR,IAAI;IAACe,KAAK,EAAE,CAACD,cAAc,CAACH,KAAK,CAACK,QAAQ,EAAEC,MAAM,CAACD,QAAQ,CAAE;IAAAE,QAAA,GAC5DZ,IAAA,CAACL,IAAI;MAACc,KAAK,EAAE,CAACD,cAAc,CAACH,KAAK,CAACQ,IAAI,EAAEF,MAAM,CAACG,UAAU,CAAE;MAAAF,QAAA,EAAC;IAAuB,EAAO,EAE1FN,QAAQ,CAACS,MAAM,IAAI,CAAC,GACnBb,KAAA,CAACR,IAAI;MAACe,KAAK,EAAEE,MAAM,CAACK,OAAQ;MAAAJ,QAAA,GAC1BZ,IAAA,CAACL,IAAI;QAACc,KAAK,EAAEE,MAAM,CAACM,eAAgB;QAAAL,QAAA,EAAC;MAA4B,EAAO,EACxEZ,IAAA,CAACF,SAAS;QAACoB,IAAI,EAAE;MAAI,EAAG;IAAA,EACnB,GAEPZ,QAAQ,CAACa,GAAG,CAAC,UAACC,GAAG,EAAI;MAAE,OACrBpB,IAAA,CAACN,IAAI;QAAAkB,QAAA,EACHV,KAAA,CAACP,IAAI;UAACc,KAAK,EAAE,CAACD,cAAc,CAACH,KAAK,CAACQ,IAAI,EAAEF,MAAM,CAACM,eAAe,CAAE;UAAAL,QAAA,GAAC,GAAC,EAACQ,GAAG,CAACC,IAAI,EAAC,GAAC;QAAA;MAAO,EAChF;IAAC,CAAC,CAAC;EAAA,EAET;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGlB,UAAU,CAAC6B,MAAM,CAAC;EAC/BZ,QAAQ,EAAE;IACRa,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDV,UAAU,EAAE;IACVW,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDT,eAAe,EAAE;IACfQ,QAAQ,EAAE;EACZ,CAAC;EACDT,OAAO,EAAE;IACPW,aAAa,EAAE,QAAQ;IACvBJ,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAepB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}