{"ast":null,"code":"import React, { useContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DetailScreen = function DetailScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    character = _useContext.character;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: [styles.mainView, componentStyle.theme.mainView],\n    children: [_jsx(Text, {\n      style: [styles.textTittle, componentStyle.theme.text],\n      children: \"Personagem\"\n    }), person ? person.map(function (person) {\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          style: [styles.textDescription, componentStyle.theme.text],\n          children: person.name\n        }), _jsx(Text, {\n          style: [styles.textDescription, componentStyle.theme.text],\n          children: \"eae\"\n        }), _jsx(Text, {\n          style: [styles.textDescription, componentStyle.theme.text],\n          children: \"fdsff\"\n        }), _jsx(Text, {\n          style: [styles.textDescription, componentStyle.theme.text],\n          children: \"32141241f\"\n        }), _jsx(Text, {\n          style: [styles.textDescription, componentStyle.theme.text],\n          children: \"fddfsfsdfds\"\n        })]\n      });\n    }) : _jsx(Text, {\n      children: \"Loading...\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20\n  },\n  textDescription: {\n    fontSize: 20\n  }\n});\nexport default DetailScreen;","map":{"version":3,"names":["React","useContext","useEffect","useState","StyleSheet","View","Text","stylesTheme","UserContext","axios","jsx","_jsx","jsxs","_jsxs","DetailScreen","_useContext","theme","character","componentStyle","style","styles","mainView","children","textTittle","text","person","map","textDescription","name","create","justifyContent","padding","fontSize","marginBottom"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/detailScreen/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport stylesTheme from '../../styles';\nimport { UserContext } from '../../contexts/userContext';\nimport axios from 'axios';\n\nconst DetailScreen = () => {\n\n  const { theme, character } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n\n  if (!componentStyle) {\n    return null; \n  }\n\n  return (\n    <View style={[styles.mainView, componentStyle.theme.mainView]}>\n      <Text style={[styles.textTittle, componentStyle.theme.text]}>\n        Personagem\n      </Text>\n      {person ? (\n      person.map((person) => {\n      return (\n      <View>\n        <Text style={[styles.textDescription, componentStyle.theme.text]}>{person.name}</Text>\n        <Text style={[styles.textDescription, componentStyle.theme.text]}>eae</Text>\n        <Text style={[styles.textDescription, componentStyle.theme.text]}>fdsff</Text>\n        <Text style={[styles.textDescription, componentStyle.theme.text]}>32141241f</Text>\n        <Text style={[styles.textDescription, componentStyle.theme.text]}>fddfsfsdfds</Text>\n      </View>\n    );\n  })\n) : (\n  <Text>Loading...</Text>\n)}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50,\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20,\n  },\n  textDescription: {\n    fontSize: 20,\n  }\n})\n\nexport default DetailScreen"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE9D,OAAOC,WAAW;AAClB,SAASC,WAAW;AACpB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAEzB,IAAAC,WAAA,GAA6Bd,UAAU,CAACO,WAAW,CAAC;IAA5CQ,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,SAAS,GAAAF,WAAA,CAATE,SAAS;EAExB,IAAMC,cAAc,GAAGF,KAAK,GAAGT,WAAW,CAACS,KAAK,CAAC,GAAG,IAAI;EAGxD,IAAI,CAACE,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACEL,KAAA,CAACR,IAAI;IAACc,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAEH,cAAc,CAACF,KAAK,CAACK,QAAQ,CAAE;IAAAC,QAAA,GAC5DX,IAAA,CAACL,IAAI;MAACa,KAAK,EAAE,CAACC,MAAM,CAACG,UAAU,EAAEL,cAAc,CAACF,KAAK,CAACQ,IAAI,CAAE;MAAAF,QAAA,EAAC;IAE7D,EAAO,EACNG,MAAM,GACPA,MAAM,CAACC,GAAG,CAAC,UAACD,MAAM,EAAK;MACvB,OACAZ,KAAA,CAACR,IAAI;QAAAiB,QAAA,GACHX,IAAA,CAACL,IAAI;UAACa,KAAK,EAAE,CAACC,MAAM,CAACO,eAAe,EAAET,cAAc,CAACF,KAAK,CAACQ,IAAI,CAAE;UAAAF,QAAA,EAAEG,MAAM,CAACG;QAAI,EAAQ,EACtFjB,IAAA,CAACL,IAAI;UAACa,KAAK,EAAE,CAACC,MAAM,CAACO,eAAe,EAAET,cAAc,CAACF,KAAK,CAACQ,IAAI,CAAE;UAAAF,QAAA,EAAC;QAAG,EAAO,EAC5EX,IAAA,CAACL,IAAI;UAACa,KAAK,EAAE,CAACC,MAAM,CAACO,eAAe,EAAET,cAAc,CAACF,KAAK,CAACQ,IAAI,CAAE;UAAAF,QAAA,EAAC;QAAK,EAAO,EAC9EX,IAAA,CAACL,IAAI;UAACa,KAAK,EAAE,CAACC,MAAM,CAACO,eAAe,EAAET,cAAc,CAACF,KAAK,CAACQ,IAAI,CAAE;UAAAF,QAAA,EAAC;QAAS,EAAO,EAClFX,IAAA,CAACL,IAAI;UAACa,KAAK,EAAE,CAACC,MAAM,CAACO,eAAe,EAAET,cAAc,CAACF,KAAK,CAACQ,IAAI,CAAE;UAAAF,QAAA,EAAC;QAAW,EAAO;MAAA,EAC/E;IAEX,CAAC,CAAC,GAEFX,IAAA,CAACL,IAAI;MAAAgB,QAAA,EAAC;IAAU,EACjB;EAAA,EACU;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGhB,UAAU,CAACyB,MAAM,CAAC;EAC/BR,QAAQ,EAAE;IACRS,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDR,UAAU,EAAE;IACVS,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDN,eAAe,EAAE;IACfK,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAelB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}