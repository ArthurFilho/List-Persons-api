{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { getEpisode } from \"../../component/api/rick-and-morty\";\nimport UserScreen from \"../userScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EpisodeDetailScreen = function EpisodeDetailScreen(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    episodes = _useState2[0],\n    setEpisodes = _useState2[1];\n  var navigation = props.navigation;\n  var urls = props.route.params.urls;\n  function buscar(_x) {\n    return _buscar.apply(this, arguments);\n  }\n  function _buscar() {\n    _buscar = _asyncToGenerator(function* (list) {\n      var aux = [];\n      for (var url of list) {\n        var u = url.replace(\"https://rickandmortyapi.com/api/episode/\", \"\");\n        var ep = yield getEpisode(u);\n        aux.push(ep.data);\n      }\n      ;\n      setEpisodes(aux);\n    });\n    return _buscar.apply(this, arguments);\n  }\n  useEffect(function () {\n    buscar(urls);\n  }, []);\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  return _jsxs(View, {\n    children: [_jsx(UserScreen, {}), _jsx(View, {\n      style: styles.characterContainer,\n      children: _jsx(FlatList, {\n        data: episodes,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsxs(View, {\n            children: [_jsxs(View, {\n              style: styles.characterContainer,\n              children: [_jsx(Text, {\n                children: item.name\n              }), _jsx(Text, {\n                children: item.air_date\n              }), _jsx(Text, {\n                children: item.episode\n              })]\n            }), _jsx(Button, {\n              title: \"CHARACTERS\",\n              onPress: function onPress() {\n                return navigation.navigate(\"Main\", {\n                  characters: item.characters\n                });\n              }\n            })]\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        }\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  characterContainer: {\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    alignContent: \"flex-start\",\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#CCCCCC\",\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default EpisodeDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Button","Text","Image","FlatList","getEpisode","UserScreen","jsx","_jsx","jsxs","_jsxs","EpisodeDetailScreen","props","_useState","_useState2","_slicedToArray","episodes","setEpisodes","navigation","urls","route","params","buscar","_x","_buscar","apply","arguments","_asyncToGenerator","list","aux","url","u","replace","ep","push","data","_useContext","useContext","UserContext","theme","componentStyle","stylesTheme","children","style","styles","characterContainer","renderItem","_ref","item","name","air_date","episode","title","onPress","navigate","characters","keyExtractor","index","toString","create","mainView","justifyContent","padding","backgroundColor","flexDirection","alignItems","alignContent","marginVertical","characterImage","width","height","marginRight","textInput","borderWidth","borderColor"],"sources":["C:/Users/Meu Computador/Desktop/00-atv5 - cÃ³pia/src/screens/episode-detail/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, View, Button, Text, Image, FlatList } from \"react-native\";\nimport { getEpisode } from \"../../component/api/rick-and-morty\";\nimport UserScreen from \"../userScreen\";\n\nconst EpisodeDetailScreen = (props) => {\n  const [episodes, setEpisodes] = useState([]);\n  const navigation = props.navigation;\n  const urls = props.route.params.urls;\n  async function buscar(list) {\n    const aux = [];\n    for (const url of list) {\n      const u = url.replace(\"https://rickandmortyapi.com/api/episode/\", \"\");\n      const ep = await getEpisode(u);\n      aux.push(ep.data);\n    };\n    setEpisodes(aux);\n  }\n  useEffect(() => {\n    buscar(urls);\n  }, []);\n\n  const { theme } = useContext(UserContext)\n\n    const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n\n  return (\n    <View>\n      <UserScreen />\n      <View style={styles.characterContainer}>\n        <FlatList\n          data={episodes}\n          renderItem={({ item }) => (\n            <View>\n              <View style={styles.characterContainer}>\n                <Text>{item.name}</Text>\n                <Text>{item.air_date}</Text>\n                <Text>{item.episode}</Text>\n              </View>\n              <Button\n                title=\"CHARACTERS\"\n                onPress={() =>\n                  navigation.navigate(\"Main\", {\n                    characters: item.characters,\n                  })\n                }\n              />\n            </View>\n          )}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  characterContainer: {\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    alignContent: \"flex-start\",\n    marginVertical: 5,\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10,\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: \"#CCCCCC\",\n    height: 35,\n    padding: 5,\n  },\n  marginVertical: {\n    marginVertical: 5,\n  },\n});\n\nexport default EpisodeDetailScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}