{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getCharacter, getCharactersId, getNextCharacterPage } from \"../../component/api/rick-and-morty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainScreen = function MainScreen(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    characters = _useState2[0],\n    setCharacters = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pageInfo = _useState4[0],\n    setPageInfo = _useState4[1];\n  var _useState5 = useState(' '),\n    _useState6 = _slicedToArray(_useState5, 2),\n    nameSearch = _useState6[0],\n    setNameSearch = _useState6[1];\n  var navigation = props.navigation;\n  useEffect(_asyncToGenerator(function* () {\n    var c = props.route.params ? props.route.params.characters : undefined;\n    if (c) {\n      var ch = c.map(function (ch) {\n        return ch.split('/').pop();\n      });\n      var u = yield getCharactersId(ch);\n      console.log(u);\n      setCharacters(u.data);\n    }\n  }), [props.route.params]);\n  return _jsxs(View, {\n    style: styles.mainView,\n    children: [_jsx(TextInput, {\n      style: [styles.textInput, styles.marginVertical],\n      onChangeText: setNameSearch,\n      value: nameSearch\n    }), _jsx(Button, {\n      title: \"Load Characters\",\n      onPress: _asyncToGenerator(function* () {\n        try {\n          var chars = yield getCharacter({\n            name: nameSearch\n          });\n          setPageInfo(chars.data.info);\n          setCharacters(chars.data.results);\n        } catch (error) {\n          setPageInfo({});\n          setCharacters([]);\n        }\n      })\n    }), _jsx(FlatList, {\n      style: styles.marginVertical,\n      data: characters,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(element) {\n        var character = element.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            console.log('touchable opacity pressed');\n            navigation.navigate('CharDetail', {\n              id: character.id\n            });\n          },\n          children: _jsxs(View, {\n            style: styles.characterContainer,\n            children: [_jsx(Image, {\n              style: styles.characterImage,\n              source: {\n                uri: character.image\n              }\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                children: character.name\n              }), _jsx(Text, {\n                children: character.status\n              })]\n            })]\n          })\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Load More...\",\n      disabled: !pageInfo.next,\n      onPress: _asyncToGenerator(function* () {\n        var chars = yield getNextCharacterPage(pageInfo.next);\n        setPageInfo(chars.data.info);\n        setCharacters([].concat(_toConsumableArray(characters), _toConsumableArray(chars.data.results)));\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default MainScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Button","View","Image","Text","FlatList","TextInput","TouchableOpacity","getCharacter","getCharactersId","getNextCharacterPage","jsx","_jsx","jsxs","_jsxs","MainScreen","props","_useState","_useState2","_slicedToArray","characters","setCharacters","_useState3","_useState4","pageInfo","setPageInfo","_useState5","_useState6","nameSearch","setNameSearch","navigation","_asyncToGenerator","c","route","params","undefined","ch","map","split","pop","u","console","log","data","style","styles","mainView","children","textInput","marginVertical","onChangeText","value","title","onPress","chars","name","info","results","error","keyExtractor","item","id","renderItem","element","character","navigate","characterContainer","characterImage","source","uri","image","status","disabled","next","concat","_toConsumableArray","create","justifyContent","padding","backgroundColor","flexDirection","alignItems","width","height","marginRight","borderWidth","borderColor"],"sources":["/Users/amandacastilho/Desktop/00-atv4/src/screens/main-screen/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Button, View, Image, Text, FlatList, TextInput, TouchableOpacity} from 'react-native'\nimport { getCharacter, getCharactersId, getNextCharacterPage } from '../../component/api/rick-and-morty'\n\nconst MainScreen = (props) => {\n  const [characters, setCharacters] = useState([])\n  const [pageInfo, setPageInfo] = useState({})\n  const [nameSearch, setNameSearch] = useState(' ')\n  const navigation = props.navigation\n  useEffect(async () => {\n    const c = props.route.params ? props.route.params.characters : undefined;\n    if (c){\n    const ch = c.map(ch => ch.split('/').pop())\n    const u = await getCharactersId(ch);\n    console.log(u)\n    setCharacters(u.data)}    \n  }, [props.route.params]);\n\n  return (\n    <View style={styles.mainView}>\n      <TextInput\n        style={[styles.textInput, styles.marginVertical]}\n        onChangeText={setNameSearch}\n        value={nameSearch}\n      />\n      <Button\n        title=\"Load Characters\"\n        onPress={async () => {\n          try {\n            const chars = await getCharacter({\n              name: nameSearch\n            })\n\n            setPageInfo(chars.data.info)\n            setCharacters(chars.data.results)\n          } catch (error) {\n            setPageInfo({})\n            setCharacters([])\n          }\n        }}\n      />\n      \n        \n      <FlatList\n        style={styles.marginVertical}\n        data={characters}\n        keyExtractor={(item) => item.id}\n        renderItem={(element) => {\n          const character = element.item\n\n          return (\n            <TouchableOpacity\n            onPress={() => {\n              console.log('touchable opacity pressed')\n              navigation.navigate('CharDetail', {id:character.id})\n            }}>\n\n            <View style={styles.characterContainer}>\n              <Image style={styles.characterImage} source={{ uri: character.image }} />\n              <View >\n                <Text>{character.name}</Text>\n                <Text>{character.status}</Text>\n              </View>\n            </View>\n            </TouchableOpacity>\n          )\n          \n        }}\n      /> \n\n      <Button\n        title=\"Load More...\"\n        disabled={!pageInfo.next}\n        onPress={async () => {\n          const chars = await getNextCharacterPage(pageInfo.next)\n\n          setPageInfo(chars.data.info)\n          setCharacters([...characters, ...chars.data.results])\n        }}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n})\n\nexport default MainScreen"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAElD,SAASC,YAAY,EAAEC,eAAe,EAAEC,oBAAoB;AAA4C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExG,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;EAC5B,IAAAC,SAAA,GAAoClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAgCvB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAoC3B,QAAQ,CAAC,GAAG,CAAC;IAAA4B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA1CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAMG,UAAU,GAAGd,KAAK,CAACc,UAAU;EACnChC,SAAS,CAAAiC,iBAAA,CAAC,aAAY;IACpB,IAAMC,CAAC,GAAGhB,KAAK,CAACiB,KAAK,CAACC,MAAM,GAAGlB,KAAK,CAACiB,KAAK,CAACC,MAAM,CAACd,UAAU,GAAGe,SAAS;IACxE,IAAIH,CAAC,EAAC;MACN,IAAMI,EAAE,GAAGJ,CAAC,CAACK,GAAG,CAAC,UAAAD,EAAE;QAAA,OAAIA,EAAE,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;MAAA,EAAC;MAC3C,IAAMC,CAAC,SAAS/B,eAAe,CAAC2B,EAAE,CAAC;MACnCK,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACdnB,aAAa,CAACmB,CAAC,CAACG,IAAI,CAAC;IAAA;EACvB,CAAC,GAAE,CAAC3B,KAAK,CAACiB,KAAK,CAACC,MAAM,CAAC,CAAC;EAExB,OACEpB,KAAA,CAACZ,IAAI;IAAC0C,KAAK,EAAEC,MAAM,CAACC,QAAS;IAAAC,QAAA,GAC3BnC,IAAA,CAACN,SAAS;MACRsC,KAAK,EAAE,CAACC,MAAM,CAACG,SAAS,EAAEH,MAAM,CAACI,cAAc,CAAE;MACjDC,YAAY,EAAErB,aAAc;MAC5BsB,KAAK,EAAEvB;IAAW,EAClB,EACFhB,IAAA,CAACX,MAAM;MACLmD,KAAK,EAAC,iBAAiB;MACvBC,OAAO,EAAAtB,iBAAA,CAAE,aAAY;QACnB,IAAI;UACF,IAAMuB,KAAK,SAAS9C,YAAY,CAAC;YAC/B+C,IAAI,EAAE3B;UACR,CAAC,CAAC;UAEFH,WAAW,CAAC6B,KAAK,CAACX,IAAI,CAACa,IAAI,CAAC;UAC5BnC,aAAa,CAACiC,KAAK,CAACX,IAAI,CAACc,OAAO,CAAC;QACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdjC,WAAW,CAAC,CAAC,CAAC,CAAC;UACfJ,aAAa,CAAC,EAAE,CAAC;QACnB;MACF,CAAC;IAAC,EACF,EAGFT,IAAA,CAACP,QAAQ;MACPuC,KAAK,EAAEC,MAAM,CAACI,cAAe;MAC7BN,IAAI,EAAEvB,UAAW;MACjBuC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE;MAAA,CAAC;MAChCC,UAAU,EAAE,SAAAA,WAACC,OAAO,EAAK;QACvB,IAAMC,SAAS,GAAGD,OAAO,CAACH,IAAI;QAE9B,OACEhD,IAAA,CAACL,gBAAgB;UACjB8C,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;YACxCZ,UAAU,CAACmC,QAAQ,CAAC,YAAY,EAAE;cAACJ,EAAE,EAACG,SAAS,CAACH;YAAE,CAAC,CAAC;UACtD,CAAE;UAAAd,QAAA,EAEFjC,KAAA,CAACZ,IAAI;YAAC0C,KAAK,EAAEC,MAAM,CAACqB,kBAAmB;YAAAnB,QAAA,GACrCnC,IAAA,CAACT,KAAK;cAACyC,KAAK,EAAEC,MAAM,CAACsB,cAAe;cAACC,MAAM,EAAE;gBAAEC,GAAG,EAAEL,SAAS,CAACM;cAAM;YAAE,EAAG,EACzExD,KAAA,CAACZ,IAAI;cAAA6C,QAAA,GACHnC,IAAA,CAACR,IAAI;gBAAA2C,QAAA,EAAEiB,SAAS,CAACT;cAAI,EAAQ,EAC7B3C,IAAA,CAACR,IAAI;gBAAA2C,QAAA,EAAEiB,SAAS,CAACO;cAAM,EAAQ;YAAA,EAC1B;UAAA;QACF,EACY;MAGvB;IAAE,EACF,EAEF3D,IAAA,CAACX,MAAM;MACLmD,KAAK,EAAC,cAAc;MACpBoB,QAAQ,EAAE,CAAChD,QAAQ,CAACiD,IAAK;MACzBpB,OAAO,EAAAtB,iBAAA,CAAE,aAAY;QACnB,IAAMuB,KAAK,SAAS5C,oBAAoB,CAACc,QAAQ,CAACiD,IAAI,CAAC;QAEvDhD,WAAW,CAAC6B,KAAK,CAACX,IAAI,CAACa,IAAI,CAAC;QAC5BnC,aAAa,IAAAqD,MAAA,CAAAC,kBAAA,CAAKvD,UAAU,GAAAuD,kBAAA,CAAKrB,KAAK,CAACX,IAAI,CAACc,OAAO,GAAE;MACvD,CAAC;IAAC,EACF;EAAA,EACG;AAEX,CAAC;AAED,IAAMZ,MAAM,GAAG7C,UAAU,CAAC4E,MAAM,CAAC;EAC/B9B,QAAQ,EAAE;IACR+B,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDb,kBAAkB,EAAE;IAClBc,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBhC,cAAc,EAAE;EAClB,CAAC;EACDkB,cAAc,EAAE;IACde,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE;EACf,CAAC;EACDpC,SAAS,EAAE;IACTqC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBH,MAAM,EAAE,EAAE;IACVL,OAAO,EAAE;EACX,CAAC;EACD7B,cAAc,EAAE;IACdA,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAelC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}