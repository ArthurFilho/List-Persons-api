{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { getEspisodes } from \"../../component/api/rick-and-morty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EpisodeDetailScreen = function EpisodeDetailScreen(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    episodes = _useState2[0],\n    setEpisodes = _useState2[1];\n  var navigation = props.navigation;\n  var urls = props.route.params.urls;\n  function buscar(_x) {\n    return _buscar.apply(this, arguments);\n  }\n  function _buscar() {\n    _buscar = _asyncToGenerator(function* (list) {\n      var aux = [];\n      list.forEach(function () {\n        var _ref2 = _asyncToGenerator(function* (url, i) {\n          var u = url.replace('https://rickandmortyapi.com/api/episode/', '');\n          var ep = yield getEspisodes(u);\n          aux.push(ep.data);\n        });\n        return function (_x2, _x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      setEpisodes(aux);\n    });\n    return _buscar.apply(this, arguments);\n  }\n  useEffect(function () {\n    buscar(urls);\n  }, []);\n  return _jsx(View, {\n    children: _jsx(View, {\n      style: styles.characterContainer,\n      children: _jsx(FlatList, {\n        data: episodes,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsxs(View, {\n            children: [_jsxs(View, {\n              style: styles.characterContainer,\n              children: [_jsx(Text, {\n                children: item.name\n              }), _jsx(Text, {\n                children: item.air_date\n              }), _jsx(Text, {\n                children: item.episode\n              })]\n            }), _jsx(Button, {\n              title: \"CHARACTERS\",\n              onPress: function onPress() {\n                return navigation.navigate('MainScreen', {\n                  characters: item.characters\n                });\n              }\n            })]\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        }\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    alignContent: 'flex-start',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default EpisodeDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Button","Text","Image","FlatList","getEspisodes","jsx","_jsx","jsxs","_jsxs","EpisodeDetailScreen","props","_useState","_useState2","_slicedToArray","episodes","setEpisodes","navigation","urls","route","params","buscar","_x","_buscar","apply","arguments","_asyncToGenerator","list","aux","forEach","_ref2","url","i","u","replace","ep","push","data","_x2","_x3","children","style","styles","characterContainer","renderItem","_ref","item","name","air_date","episode","title","onPress","navigate","characters","keyExtractor","index","toString","create","mainView","justifyContent","padding","backgroundColor","flexDirection","alignItems","alignContent","marginVertical","characterImage","width","height","marginRight","textInput","borderWidth","borderColor"],"sources":["D:/Backup PC/Note App/00-atv4/src/screens/episode-detail/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { StyleSheet, View, Button, Text, Image, FlatList} from 'react-native'\nimport { getEspisodes } from '../../component/api/rick-and-morty'\n\nconst EpisodeDetailScreen = (props) => {\n  const [episodes, setEpisodes] = useState([]) \n  const navigation = props.navigation \n const urls = props.route.params.urls\n async function buscar(list){\n  const aux = []\n  list.forEach(async (url, i) => {\n    const u = url.replace('https://rickandmortyapi.com/api/episode/', '')\n    const ep = await getEspisodes(u)\n    aux.push(ep.data)\n  })\n  setEpisodes(aux)\n}\nuseEffect(() => {\n  buscar(urls)\n}, [])\n\nreturn (\n  <View>\n    <View style={styles.characterContainer}>\n    <FlatList\n      data={episodes}\n      renderItem={({ item }) => (\n        <View>\n          <View style={styles.characterContainer}>\n            <Text>{item.name}</Text>\n            <Text>{item.air_date}</Text>\n            <Text>{item.episode}</Text>\n          </View>\n          <Button\n            title=\"CHARACTERS\"\n            onPress={() => navigation.navigate('MainScreen', { characters: item.characters })}\n          />\n        </View>\n      )}\n      keyExtractor={(item, index) => index.toString()}\n    />\n    </View>\n  </View>\n  ) \n\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    alignContent: 'flex-start',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n})\n\nexport default EpisodeDetailScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}