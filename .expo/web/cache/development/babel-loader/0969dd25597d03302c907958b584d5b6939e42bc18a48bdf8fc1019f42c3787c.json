{"ast":null,"code":"import { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { stylesTheme } from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ThemeScreen = function ThemeScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    ButtonChangeTheme = _useContext.ButtonChangeTheme;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  var combinedStyles = StyleSheet.compose(componentStyle.theme.mainView, styles.checkBoxComponent);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: combinedStyles,\n      children: [_jsx(Button, {\n        style: componentStyle.buttonColor,\n        onPress: function onPress() {\n          return ButtonChangeTheme();\n        },\n        title: \"salve alek\"\n      }), _jsx(Text, {\n        style: componentStyle.theme.text,\n        children: \" Toggle dark/light mode \"\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  checkBoxComponent: {\n    display: 'flex'\n  }\n});\nexport default ThemeScreen;","map":{"version":3,"names":["useContext","StyleSheet","View","Text","Button","stylesTheme","UserContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ThemeScreen","_useContext","theme","ButtonChangeTheme","componentStyle","combinedStyles","compose","mainView","styles","checkBoxComponent","children","style","buttonColor","onPress","title","text","create","display"],"sources":["C:/Users/Meu Computador/Desktop/00-atv5 - cÃ³pia/src/screens/theme/index.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { StyleSheet, View, Text, Button } from \"react-native\";\nimport { stylesTheme } from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\n\nconst ThemeScreen = () => {\n\n  const { theme, ButtonChangeTheme } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n  const combinedStyles = StyleSheet.compose(componentStyle.theme.mainView, styles.checkBoxComponent);\n  return (\n    <>\n      <View style={combinedStyles}>\n        <Button style={componentStyle.buttonColor} onPress={() => ButtonChangeTheme()} title=\"salve alek\" />\n        <Text style={componentStyle.theme.text}> Toggle dark/light mode </Text>\n      </View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n    checkBoxComponent:{\n    display: 'flex',\n  }\n})\n\n\nexport default ThemeScreen"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnC,SAASC,WAAW;AACpB,SAASC,WAAW;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAExB,IAAAC,WAAA,GAAqCd,UAAU,CAACM,WAAW,CAAC;IAApDS,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,iBAAiB,GAAAF,WAAA,CAAjBE,iBAAiB;EAEhC,IAAMC,cAAc,GAAGF,KAAK,GAAGV,WAAW,CAACU,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACE,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EACA,IAAMC,cAAc,GAAGjB,UAAU,CAACkB,OAAO,CAACF,cAAc,CAACF,KAAK,CAACK,QAAQ,EAAEC,MAAM,CAACC,iBAAiB,CAAC;EAClG,OACEd,IAAA,CAAAI,SAAA;IAAAW,QAAA,EACEb,KAAA,CAACR,IAAI;MAACsB,KAAK,EAAEN,cAAe;MAAAK,QAAA,GAC1Bf,IAAA,CAACJ,MAAM;QAACoB,KAAK,EAAEP,cAAc,CAACQ,WAAY;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,iBAAiB,EAAE;QAAA,CAAC;QAACW,KAAK,EAAC;MAAY,EAAG,EACpGnB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAEP,cAAc,CAACF,KAAK,CAACa,IAAK;QAAAL,QAAA,EAAC;MAAwB,EAAO;IAAA;EAClE,EACN;AAEP,CAAC;AAED,IAAMF,MAAM,GAAGpB,UAAU,CAAC4B,MAAM,CAAC;EAC7BP,iBAAiB,EAAC;IAClBQ,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAGF,eAAejB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}