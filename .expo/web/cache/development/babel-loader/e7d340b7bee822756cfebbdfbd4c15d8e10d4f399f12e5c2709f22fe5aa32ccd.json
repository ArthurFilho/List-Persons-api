{"ast":null,"code":"import { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport stylesTheme from \"../../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ThemeScreen = function ThemeScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    ButtonChangeTheme = _useContext.ButtonChangeTheme;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: [componentStyle.theme.mainView, styles.checkBoxComponent],\n      children: _jsx(Button, {\n        color: [componentStyle.theme.text, stylesTheme[fontSize]],\n        onPress: function onPress() {\n          return ButtonChangeTheme();\n        },\n        title: \"Tema da p\\xE1gina\"\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  checkBoxComponent: {\n    display: 'flex'\n  }\n});\nexport default ThemeScreen;","map":{"version":3,"names":["useContext","StyleSheet","View","Button","UserContext","stylesTheme","jsx","_jsx","Fragment","_Fragment","ThemeScreen","_useContext","theme","ButtonChangeTheme","componentStyle","children","style","mainView","styles","checkBoxComponent","color","text","fontSize","onPress","title","create","display"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/component/theme/index.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { StyleSheet, View, Button } from \"react-native\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport stylesTheme from \"../../styles\";\n\nconst ThemeScreen = () => {\n\n  const { theme, ButtonChangeTheme } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n  return (\n    <>\n      <View style={[componentStyle.theme.mainView, styles.checkBoxComponent]}>\n        <Button color={[componentStyle.theme.text, stylesTheme[fontSize]]} onPress={() => ButtonChangeTheme()} title='Tema da página' />\n      </View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n    checkBoxComponent:{\n    display: 'flex',\n  }\n})\n\n\nexport default ThemeScreen"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnC,SAASC,WAAW;AACpB,OAAOC,WAAW;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAExB,IAAAC,WAAA,GAAqCX,UAAU,CAACI,WAAW,CAAC;IAApDQ,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,iBAAiB,GAAAF,WAAA,CAAjBE,iBAAiB;EAEhC,IAAMC,cAAc,GAAGF,KAAK,GAAGP,WAAW,CAACO,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACE,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EACA,OACEP,IAAA,CAAAE,SAAA;IAAAM,QAAA,EACER,IAAA,CAACL,IAAI;MAACc,KAAK,EAAE,CAACF,cAAc,CAACF,KAAK,CAACK,QAAQ,EAAEC,MAAM,CAACC,iBAAiB,CAAE;MAAAJ,QAAA,EACrER,IAAA,CAACJ,MAAM;QAACiB,KAAK,EAAE,CAACN,cAAc,CAACF,KAAK,CAACS,IAAI,EAAEhB,WAAW,CAACiB,QAAQ,CAAC,CAAE;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,iBAAiB,EAAE;QAAA,CAAC;QAACW,KAAK,EAAC;MAAgB;IAAG;EAC3H,EACN;AAEP,CAAC;AAED,IAAMN,MAAM,GAAGjB,UAAU,CAACwB,MAAM,CAAC;EAC7BN,iBAAiB,EAAC;IAClBO,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAGF,eAAehB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}