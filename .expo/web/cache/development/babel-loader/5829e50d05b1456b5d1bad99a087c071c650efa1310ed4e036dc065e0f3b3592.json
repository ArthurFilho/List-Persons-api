{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getCharacter, getNextCharacterPage, getCharacterId } from \"../../component/api/rick-and-morty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CharDetailScreen = function CharDetailScreen(props) {\n  var id = props.route.params.id;\n  var _useState = useState({\n      name: '',\n      origin: {},\n      location: {}\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    character = _useState2[0],\n    setCharacter = _useState2[1];\n  var navigation = props.navigation;\n  useEffect(function () {\n    buscar(id);\n  }, []);\n  function buscar(_x) {\n    return _buscar.apply(this, arguments);\n  }\n  function _buscar() {\n    _buscar = _asyncToGenerator(function* (id) {\n      var c = yield getCharacterId(id);\n      console.log(c.data);\n      setCharacter(c.data);\n    });\n    return _buscar.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.characterContainer,\n      children: [_jsx(Image, {\n        style: styles.characterImage,\n        source: {\n          uri: character.image\n        }\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: character.name\n        }), _jsx(Text, {\n          children: character.status\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          children: character.species\n        }), _jsx(Text, {\n          children: character.type\n        }), _jsx(Text, {\n          children: character.gender\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log('touchable opacity pressed');\n          navigation.navigate('LocationDetailScreen');\n        },\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            children: character.origin.name\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          console.log('touchable opacity pressed');\n          navigation.navigate('LocationDetailScreen');\n        },\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            children: character.location.name\n          })\n        })\n      })]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        navigation.navigate('EpisodeDetail', {\n          urls: character.episode\n        });\n      },\n      title: \"EPISODES\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default CharDetailScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Button","View","Image","Text","FlatList","TextInput","TouchableOpacity","getCharacter","getNextCharacterPage","getCharacterId","jsx","_jsx","jsxs","_jsxs","CharDetailScreen","props","id","route","params","_useState","name","origin","location","_useState2","_slicedToArray","character","setCharacter","navigation","buscar","_x","_buscar","apply","arguments","_asyncToGenerator","c","console","log","data","children","style","styles","characterContainer","characterImage","source","uri","image","status","species","type","gender","onPress","navigate","urls","episode","title","create","mainView","justifyContent","padding","backgroundColor","flexDirection","alignItems","marginVertical","width","height","marginRight","textInput","borderWidth","borderColor"],"sources":["/Users/amandacastilho/Desktop/react-native-web-lessons-main 2/00-atv4/src/screens/char-detail/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Button, View, Image, Text, FlatList, TextInput, TouchableOpacity} from 'react-native'\nimport { getCharacter, getNextCharacterPage, getCharacterId } from '../../component/api/rick-and-morty'\n\nconst CharDetailScreen = (props) => {\nconst id = props.route.params.id\nconst [character, setCharacter] = useState({name:'', origin:{}, location:{}})\nconst navigation = props.navigation\nuseEffect(() => {\n  buscar(id)\n}, [])\nasync function buscar(id){\n  const c = await getCharacterId(id)\n  console.log(c.data)\n  setCharacter(c.data)\n}\n\n\n  return (\n    <View>\n        <View style={styles.characterContainer}>\n          <Image style={styles.characterImage} source={{ uri: character.image }} />\n          <View >\n            <Text>{character.name}</Text>\n            <Text>{character.status}</Text>\n          </View>\n          <View> \n            <Text>{character.species}</Text>\n            <Text>{character.type}</Text>\n            <Text>{character.gender}</Text>\n          </View>\n\n          <TouchableOpacity\n        onPress={() => {console.log('touchable opacity pressed')\n        navigation.navigate('LocationDetailScreen')}}> \n            <View>\n            <Text>{character.origin.name}</Text>\n            </View> \n            </TouchableOpacity>\n\n            <TouchableOpacity\n        onPress={() => {console.log('touchable opacity pressed')\n        navigation.navigate('LocationDetailScreen')}}> \n          <View>\n            <Text>{character.location.name}</Text>\n            </View> \n            </TouchableOpacity>\n\n        </View>\n      \n\n  \n\n<Button\n      onPress={() => { navigation.navigate('EpisodeDetail', {urls: character.episode}) }}\n      title=\"EPISODES\" />\n\n    </View> )\n\n}\n\nconst styles = StyleSheet.create({\n    mainView: {\n      justifyContent: 'center',\n      padding: 10,\n      backgroundColor: 'white'\n    },\n    characterContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginVertical: 5\n    },\n    characterImage: {\n      width: 90,\n      height: 90,\n      marginRight: 10\n    },\n    textInput: {\n      borderWidth: 1,\n      borderColor: '#CCCCCC',\n      height: 35,\n      padding: 5\n    },\n    marginVertical: {\n      marginVertical: 5\n    }\n  })\n\nexport default CharDetailScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}