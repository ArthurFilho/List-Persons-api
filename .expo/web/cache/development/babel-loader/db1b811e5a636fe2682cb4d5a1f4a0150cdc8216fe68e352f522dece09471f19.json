{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { getCharacter, getNextCharacterPage } from \"../../component/api/rick-and-morty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CharsEffectScreen = function CharsEffectScreen(props) {\n  var _useState = useState({\n      pageInfo: {},\n      characters: []\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    fetchResult = _useState2[0],\n    setFetchResult = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nameSearch = _useState4[0],\n    setNameSearch = _useState4[1];\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n  function _fetchData() {\n    _fetchData = _asyncToGenerator(function* () {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      try {\n        var _yield$getCharacter = yield getCharacter({\n            name: name\n          }),\n          _yield$getCharacter$d = _yield$getCharacter.data,\n          info = _yield$getCharacter$d.info,\n          results = _yield$getCharacter$d.results;\n        setFetchResult({\n          pageInfo: info,\n          characters: results\n        });\n      } catch (error) {\n        setFetchResult({\n          pageInfo: {},\n          characters: []\n        });\n      }\n    });\n    return _fetchData.apply(this, arguments);\n  }\n  useEffect(function () {\n    fetchData();\n  }, []);\n  useEffect(function () {\n    fetchData(nameSearch);\n  }, [nameSearch]);\n  return _jsxs(View, {\n    style: styles.mainView,\n    children: [_jsx(TextInput, {\n      style: [styles.textInput, styles.marginVertical],\n      onChangeText: setNameSearch,\n      value: nameSearch\n    }), _jsx(FlatList, {\n      style: styles.marginVertical,\n      data: fetchResult.characters,\n      keyExtractor: function keyExtractor(_ref) {\n        var id = _ref.id;\n        return id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var _ref2$item = _ref2.item,\n          name = _ref2$item.name,\n          status = _ref2$item.status,\n          image = _ref2$item.image;\n        return _jsxs(View, {\n          style: styles.characterContainer,\n          children: [_jsx(Image, {\n            style: styles.characterImage,\n            source: {\n              uri: image\n            }\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              children: name\n            }), _jsx(Text, {\n              children: status\n            })]\n          })]\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Load More...\",\n      disabled: !fetchResult.pageInfo.next,\n      onPress: _asyncToGenerator(function* () {\n        var currentResults = fetchResult.characters;\n        var _yield$getNextCharact = yield getNextCharacterPage(fetchResult.pageInfo.next),\n          _yield$getNextCharact2 = _yield$getNextCharact.data,\n          info = _yield$getNextCharact2.info,\n          results = _yield$getNextCharact2.results;\n        setFetchResult({\n          pageInfo: info,\n          characters: [].concat(_toConsumableArray(currentResults), _toConsumableArray(results))\n        });\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n});\nexport default CharsEffectScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Button","View","Image","Text","FlatList","TextInput","getCharacter","getNextCharacterPage","jsx","_jsx","jsxs","_jsxs","CharsEffectScreen","props","_useState","pageInfo","characters","_useState2","_slicedToArray","fetchResult","setFetchResult","_useState3","_useState4","nameSearch","setNameSearch","fetchData","_fetchData","apply","arguments","_asyncToGenerator","name","length","undefined","_yield$getCharacter","_yield$getCharacter$d","data","info","results","error","style","styles","mainView","children","textInput","marginVertical","onChangeText","value","keyExtractor","_ref","id","renderItem","_ref2","_ref2$item","item","status","image","characterContainer","characterImage","source","uri","title","disabled","next","onPress","currentResults","_yield$getNextCharact","_yield$getNextCharact2","concat","_toConsumableArray","create","justifyContent","padding","backgroundColor","flexDirection","alignItems","width","height","marginRight","borderWidth","borderColor"],"sources":["/Users/amandacastilho/Desktop/react-native-web-lessons-main 2/00-atv4/src/screens/chars-effect/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { StyleSheet, Button, View, Image, Text, FlatList, TextInput } from 'react-native'\nimport { getCharacter, getNextCharacterPage } from '../../component/api/rick-and-morty'\n\nconst CharsEffectScreen = (props) => {\n  const [fetchResult, setFetchResult] = useState({ pageInfo: {}, characters: [] })\n  const [nameSearch, setNameSearch] = useState('')\n\n  async function fetchData(name = '') {\n    try {\n      const { data: { info, results } } = await getCharacter({ name: name })\n      setFetchResult({ pageInfo: info, characters: results })\n    } catch (error) {\n      setFetchResult({ pageInfo: {}, characters: [] })\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    fetchData(nameSearch)\n  }, [nameSearch])\n\n  return (\n    <View style={styles.mainView}>\n      <TextInput\n        style={[styles.textInput, styles.marginVertical]}\n        onChangeText={setNameSearch}\n        value={nameSearch}\n      />\n      <FlatList\n        style={styles.marginVertical}\n        data={fetchResult.characters}\n        keyExtractor={({ id }) => id}\n        renderItem={({ item: { name, status, image } }) => {\n          return (\n            <View style={styles.characterContainer}>\n              <Image style={styles.characterImage} source={{ uri: image }} />\n              <View >\n                <Text>{name}</Text>\n                <Text>{status}</Text>\n              </View>\n            </View>\n          )\n        }}\n      />\n      <Button\n        title=\"Load More...\"\n        disabled={!fetchResult.pageInfo.next}\n        onPress={async () => {\n          const currentResults = fetchResult.characters\n          const { data: { info, results } } = await getNextCharacterPage(fetchResult.pageInfo.next)\n          setFetchResult({ pageInfo: info, characters: [...currentResults, ...results] })\n        }}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  characterImage: {\n    width: 90,\n    height: 90,\n    marginRight: 10\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    height: 35,\n    padding: 5\n  },\n  marginVertical: {\n    marginVertical: 5\n  }\n})\n\nexport default CharsEffectScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}