{"ast":null,"code":"import StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport DetailScreen from \"./src/screens/detailScreen\";\nimport { UserProvider } from \"./src/contexts/userContext\";\nimport SearchScreen from \"./src/screens/searchScreen\";\nimport FavoriteScreen from \"./src/screens/favoritesScreen\";\nimport SettingScreen from \"./src/screens/settingsScreen\";\nimport HomeScreen from \"./src/screens/homeScreen\";\nimport { GearSix, Heart, MagnifyingGlass } from '@phosphor-icons/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator(props);\nvar navigation = props.navigation;\nexport default function App() {\n  return _jsx(UserProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerRight: function headerRight() {\n            return _jsxs(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(TouchableOpacity, {\n                style: {\n                  marginRight: 10\n                },\n                onPress: function onPress() {\n                  return navigation.navigate('settingScreen');\n                },\n                children: _jsx(Heart, {\n                  name: \"settings\",\n                  size: 24,\n                  color: \"black\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: {\n                  marginRight: 10\n                },\n                onPress: function onPress() {\n                  return navigation.navigate('favoriteScreen');\n                },\n                children: _jsx(MagnifyingGlass, {\n                  name: \"heart\",\n                  size: 24,\n                  color: \"black\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate('searchScreen');\n                },\n                children: _jsx(GearSix, {\n                  name: \"search\",\n                  size: 24,\n                  color: \"black\"\n                })\n              })]\n            });\n          }\n        },\n        initialRouteName: \"homeScreen\",\n        children: [_jsx(Stack.Screen, {\n          name: \"homeScreen\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"detailScreen\",\n          component: DetailScreen\n        }), _jsx(Stack.Screen, {\n          name: \"searchScreen\",\n          component: SearchScreen\n        }), _jsx(Stack.Screen, {\n          name: \"favoriteScreen\",\n          component: FavoriteScreen\n        }), _jsx(Stack.Screen, {\n          name: \"settingScreen\",\n          component: SettingScreen\n        })]\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","NavigationContainer","DetailScreen","UserProvider","SearchScreen","FavoriteScreen","SettingScreen","HomeScreen","GearSix","Heart","MagnifyingGlass","jsx","_jsx","jsxs","_jsxs","Stack","props","navigation","App","children","Navigator","screenOptions","headerRight","View","style","flexDirection","TouchableOpacity","marginRight","onPress","navigate","name","size","color","initialRouteName","Screen","component","StatusBar"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/App.js"],"sourcesContent":["import { StatusBar, TouchableOpacity, View } from 'react-native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { NavigationContainer } from '@react-navigation/native'\nimport DetailScreen from './src/screens/detailScreen'\nimport { UserProvider } from './src/contexts/userContext'\nimport SearchScreen from './src/screens/searchScreen'\nimport FavoriteScreen from './src/screens/favoritesScreen'\nimport SettingScreen from './src/screens/settingsScreen'\nimport HomeScreen from './src/screens/homeScreen'\nimport { GearSix, Heart, MagnifyingGlass } from '@phosphor-icons/react'\n\nconst Stack = createNativeStackNavigator(props)\n\nconst navigation = props.navigation\n\nexport default function App() {\n  return (\n    <UserProvider>\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{\n    headerRight: () => (\n      <View style={{ flexDirection: 'row' }}>\n        <TouchableOpacity\n          style={{ marginRight: 10 }}\n          onPress={() => navigation.navigate('settingScreen')}\n        >\n          <Heart name=\"settings\" size={24} color=\"black\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{ marginRight: 10 }}\n          onPress={() => navigation.navigate('favoriteScreen')}\n        >\n          <MagnifyingGlass  name=\"heart\" size={24} color=\"black\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('searchScreen')}\n        >\n          <GearSix name=\"search\" size={24} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n    ),\n    }} initialRouteName=\"homeScreen\">\n        <Stack.Screen name=\"homeScreen\" component={HomeScreen} />\n        <Stack.Screen name=\"detailScreen\" component={DetailScreen} />\n        <Stack.Screen name=\"searchScreen\" component={SearchScreen} />\n        <Stack.Screen name=\"favoriteScreen\" component={FavoriteScreen} />\n        <Stack.Screen name=\"settingScreen\" component={SettingScreen}  />\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n    </UserProvider>\n  )\n}"],"mappings":";;;AACA,SAASA,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,YAAY;AACnB,SAASC,YAAY;AACrB,OAAOC,YAAY;AACnB,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,UAAU;AACjB,SAASC,OAAO,EAAEC,KAAK,EAAEC,eAAe,QAAQ,uBAAuB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvE,IAAMC,KAAK,GAAGf,0BAA0B,CAACgB,KAAK,CAAC;AAE/C,IAAMC,UAAU,GAAGD,KAAK,CAACC,UAAU;AAEnC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACEN,IAAA,CAACT,YAAY;IAAAgB,QAAA,EACbL,KAAA,CAACb,mBAAmB;MAAAkB,QAAA,GAClBL,KAAA,CAACC,KAAK,CAACK,SAAS;QAACC,aAAa,EAAE;UAClCC,WAAW,EAAE,SAAAA,YAAA;YAAA,OACXR,KAAA,CAACS,IAAI;cAACC,KAAK,EAAE;gBAAEC,aAAa,EAAE;cAAM,CAAE;cAAAN,QAAA,GACpCP,IAAA,CAACc,gBAAgB;gBACfF,KAAK,EAAE;kBAAEG,WAAW,EAAE;gBAAG,CAAE;gBAC3BC,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMX,UAAU,CAACY,QAAQ,CAAC,eAAe,CAAC;gBAAA,CAAC;gBAAAV,QAAA,EAEpDP,IAAA,CAACH,KAAK;kBAACqB,IAAI,EAAC,UAAU;kBAACC,IAAI,EAAE,EAAG;kBAACC,KAAK,EAAC;gBAAO;cAAG,EAChC,EACnBpB,IAAA,CAACc,gBAAgB;gBACfF,KAAK,EAAE;kBAAEG,WAAW,EAAE;gBAAG,CAAE;gBAC3BC,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMX,UAAU,CAACY,QAAQ,CAAC,gBAAgB,CAAC;gBAAA,CAAC;gBAAAV,QAAA,EAErDP,IAAA,CAACF,eAAe;kBAAEoB,IAAI,EAAC,OAAO;kBAACC,IAAI,EAAE,EAAG;kBAACC,KAAK,EAAC;gBAAO;cAAG,EACxC,EACnBpB,IAAA,CAACc,gBAAgB;gBACfE,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMX,UAAU,CAACY,QAAQ,CAAC,cAAc,CAAC;gBAAA,CAAC;gBAAAV,QAAA,EAEnDP,IAAA,CAACJ,OAAO;kBAACsB,IAAI,EAAC,QAAQ;kBAACC,IAAI,EAAE,EAAG;kBAACC,KAAK,EAAC;gBAAO;cAAG,EAChC;YAAA,EACd;UAAA;QAET,CAAE;QAACC,gBAAgB,EAAC,YAAY;QAAAd,QAAA,GAC5BP,IAAA,CAACG,KAAK,CAACmB,MAAM;UAACJ,IAAI,EAAC,YAAY;UAACK,SAAS,EAAE5B;QAAW,EAAG,EACzDK,IAAA,CAACG,KAAK,CAACmB,MAAM;UAACJ,IAAI,EAAC,cAAc;UAACK,SAAS,EAAEjC;QAAa,EAAG,EAC7DU,IAAA,CAACG,KAAK,CAACmB,MAAM;UAACJ,IAAI,EAAC,cAAc;UAACK,SAAS,EAAE/B;QAAa,EAAG,EAC7DQ,IAAA,CAACG,KAAK,CAACmB,MAAM;UAACJ,IAAI,EAAC,gBAAgB;UAACK,SAAS,EAAE9B;QAAe,EAAG,EACjEO,IAAA,CAACG,KAAK,CAACmB,MAAM;UAACJ,IAAI,EAAC,eAAe;UAACK,SAAS,EAAE7B;QAAc,EAAI;MAAA,EAChD,EAClBM,IAAA,CAACwB,SAAS;QAACZ,KAAK,EAAC;MAAM,EAAG;IAAA;EACN,EACP;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}