{"ast":null,"code":"import Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useContext } from \"react\";\nimport { useEffect } from 'react';\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(props) {\n  var navigation = props.navigation;\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    HandleSearch = _useContext.HandleSearch,\n    characters = _useContext.characters,\n    languages = _useContext.languages;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: [styles.mainView, componentStyle.theme.mainView],\n    children: [_jsx(Text, {\n      style: [styles.textStyle, componentStyle.theme.text],\n      children: languages == true ? \"Personagens de star wars\" : \"personage Star Wars\"\n    }), characters ? characters.map(function (person) {\n      return _jsx(View, {\n        style: styles.viewButton,\n        children: _jsx(Button, {\n          color: componentStyle.buttonColor,\n          style: styles.containerCard,\n          onPress: function onPress() {\n            return HandleSearch(person.url), navigation.navigate('detailScreen');\n          },\n          title: person.name\n        })\n      }, person.created);\n    }) : _jsx(Text, {\n      children: \"Loading...\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    padding: 50,\n    gap: 10\n  },\n  textStyle: {\n    fontSize: 35,\n    color: 'black',\n    marginBottom: 100\n  },\n  containerCard: {\n    cursor: 'pointer',\n    padding: 20\n  },\n  viewButton: {\n    flex: 1,\n    gap: 10\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useContext","useEffect","stylesTheme","UserContext","jsx","_jsx","jsxs","_jsxs","HomeScreen","props","navigation","_useContext","theme","HandleSearch","characters","languages","componentStyle","View","style","styles","mainView","children","Text","textStyle","text","map","person","viewButton","Button","color","buttonColor","containerCard","onPress","url","navigate","title","name","created","StyleSheet","create","padding","gap","fontSize","marginBottom","cursor","flex"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/homeScreen/index.js"],"sourcesContent":["import { Button, StyleSheet, Text, View } from 'react-native';\nimport React, { useContext } from \"react\"\nimport { useEffect } from 'react';\nimport stylesTheme from '../../styles';\nimport { UserContext } from '../../contexts/userContext';\n\nconst HomeScreen  = (props) => {\n\n  const navigation = props.navigation\n\n  const { theme, HandleSearch, characters, languages } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n\n    return (\n        <View style={[styles.mainView, componentStyle.theme.mainView]}>\n          <Text style={[styles.textStyle, componentStyle.theme.text]}>{languages == true ? \"Personagens de star wars\" : \"personage Star Wars\"}</Text>\n          {characters ? (\n            characters.map((person) => {\n              return (\n                <View key={person.created} style={styles.viewButton}>\n                  <Button color={componentStyle.buttonColor} style={styles.containerCard} onPress={() => {return (HandleSearch(person.url), navigation.navigate('detailScreen'))}} title={person.name} />\n                </View>\n              );\n            })\n          ) : (\n            <Text>Loading...</Text>\n          )}\n          </View>\n        )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    padding: 50,\n    gap: 10,\n  },\n  textStyle: {\n    fontSize: 35,\n    color: 'black',\n    marginBottom: 100,\n  },\n    containerCard: {\n    cursor: 'pointer',\n    padding: 20,\n  },\n  viewButton: {\n    flex: 1,\n    gap: 10,\n  },\n})\n\n\n  export default HomeScreen"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW;AAClB,SAASC,WAAW;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,UAAU,GAAI,SAAdA,UAAUA,CAAKC,KAAK,EAAK;EAE7B,IAAMC,UAAU,GAAGD,KAAK,CAACC,UAAU;EAEnC,IAAAC,WAAA,GAAuDX,UAAU,CAACG,WAAW,CAAC;IAAtES,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,YAAY,GAAAF,WAAA,CAAZE,YAAY;IAAEC,UAAU,GAAAH,WAAA,CAAVG,UAAU;IAAEC,SAAS,GAAAJ,WAAA,CAATI,SAAS;EAElD,IAAMC,cAAc,GAAGJ,KAAK,GAAGV,WAAW,CAACU,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACI,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEE,OACIT,KAAA,CAACU,IAAI;IAACC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAEJ,cAAc,CAACJ,KAAK,CAACQ,QAAQ,CAAE;IAAAC,QAAA,GAC5DhB,IAAA,CAACiB,IAAI;MAACJ,KAAK,EAAE,CAACC,MAAM,CAACI,SAAS,EAAEP,cAAc,CAACJ,KAAK,CAACY,IAAI,CAAE;MAAAH,QAAA,EAAEN,SAAS,IAAI,IAAI,GAAG,0BAA0B,GAAG;IAAqB,EAAQ,EAC1ID,UAAU,GACTA,UAAU,CAACW,GAAG,CAAC,UAACC,MAAM,EAAK;MACzB,OACErB,IAAA,CAACY,IAAI;QAAsBC,KAAK,EAAEC,MAAM,CAACQ,UAAW;QAAAN,QAAA,EAClDhB,IAAA,CAACuB,MAAM;UAACC,KAAK,EAAEb,cAAc,CAACc,WAAY;UAACZ,KAAK,EAAEC,MAAM,CAACY,aAAc;UAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;YAAC,OAAQnB,YAAY,CAACa,MAAM,CAACO,GAAG,CAAC,EAAEvB,UAAU,CAACwB,QAAQ,CAAC,cAAc,CAAC;UAAC,CAAE;UAACC,KAAK,EAAET,MAAM,CAACU;QAAK;MAAG,GAD9KV,MAAM,CAACW,OAAO,CAElB;IAEX,CAAC,CAAC,GAEFhC,IAAA,CAACiB,IAAI;MAAAD,QAAA,EAAC;IAAU,EACjB;EAAA,EACM;AAEjB,CAAC;AAED,IAAMF,MAAM,GAAGmB,UAAU,CAACC,MAAM,CAAC;EAC/BnB,QAAQ,EAAE;IACRoB,OAAO,EAAE,EAAE;IACXC,GAAG,EAAE;EACP,CAAC;EACDlB,SAAS,EAAE;IACTmB,QAAQ,EAAE,EAAE;IACZb,KAAK,EAAE,OAAO;IACdc,YAAY,EAAE;EAChB,CAAC;EACCZ,aAAa,EAAE;IACfa,MAAM,EAAE,SAAS;IACjBJ,OAAO,EAAE;EACX,CAAC;EACDb,UAAU,EAAE;IACVkB,IAAI,EAAE,CAAC;IACPJ,GAAG,EAAE;EACP;AACF,CAAC,CAAC;AAGA,eAAejC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}