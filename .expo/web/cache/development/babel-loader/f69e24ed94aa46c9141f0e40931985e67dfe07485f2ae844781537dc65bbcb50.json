{"ast":null,"code":"import StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport DetailScreen from \"./src/screens/detailScreen\";\nimport { UserProvider } from \"./src/contexts/userContext\";\nimport SearchScreen from \"./src/screens/searchScreen\";\nimport FavoriteScreen from \"./src/screens/favoritesScreen\";\nimport SettingScreen from \"./src/screens/settingsScreen\";\nimport HomeScreen from \"./src/screens/homeScreen\";\nimport { GearSix, Heart, MagnifyingGlass } from '@phosphor-icons/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var HeaderRight = function HeaderRight() {\n    var navigation = useNavigation();\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          marginRight: 20\n        },\n        onPress: function onPress() {\n          return navigation.navigate('favoriteScreen');\n        },\n        children: _jsx(Heart, {\n          name: \"settings\",\n          size: 24,\n          color: \"black\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginRight: 20\n        },\n        onPress: function onPress() {\n          return navigation.navigate('searchScreen');\n        },\n        children: _jsx(MagnifyingGlass, {\n          name: \"heart\",\n          size: 24,\n          color: \"black\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginRight: 100\n        },\n        onPress: function onPress() {\n          return navigation.navigate('settingScreen');\n        },\n        children: _jsx(GearSix, {\n          name: \"search\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    });\n  };\n  return _jsx(UserProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerRight: function headerRight() {\n            return _jsx(HeaderRight, {});\n          }\n        },\n        initialRouteName: \"homeScreen\",\n        children: [_jsx(Stack.Screen, {\n          name: \"homeScreen\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"detailScreen\",\n          component: DetailScreen\n        }), _jsx(Stack.Screen, {\n          name: \"searchScreen\",\n          component: SearchScreen\n        }), _jsx(Stack.Screen, {\n          name: \"favoriteScreen\",\n          component: FavoriteScreen\n        }), _jsx(Stack.Screen, {\n          name: \"settingScreen\",\n          component: SettingScreen\n        })]\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","NavigationContainer","useNavigation","DetailScreen","UserProvider","SearchScreen","FavoriteScreen","SettingScreen","HomeScreen","GearSix","Heart","MagnifyingGlass","jsx","_jsx","jsxs","_jsxs","Stack","App","HeaderRight","navigation","View","style","flexDirection","children","TouchableOpacity","marginRight","onPress","navigate","name","size","color","Navigator","screenOptions","headerRight","initialRouteName","Screen","component","StatusBar"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/App.js"],"sourcesContent":["import { StatusBar, TouchableOpacity, View } from 'react-native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { NavigationContainer, useNavigation } from '@react-navigation/native'\nimport DetailScreen from './src/screens/detailScreen'\nimport { UserProvider } from './src/contexts/userContext'\nimport SearchScreen from './src/screens/searchScreen'\nimport FavoriteScreen from './src/screens/favoritesScreen'\nimport SettingScreen from './src/screens/settingsScreen'\nimport HomeScreen from './src/screens/homeScreen'\nimport { GearSix, Heart, MagnifyingGlass } from '@phosphor-icons/react'\n\nconst Stack = createNativeStackNavigator()\n\n\n\nexport default function App() {\n  \n  const HeaderRight = () => {\n    const navigation = useNavigation();\n  \n    return (\n      <View style={{ flexDirection: 'row' }}>\n        <TouchableOpacity\n          style={{ marginRight: 20 }}\n          onPress={() => navigation.navigate('favoriteScreen')}\n        >\n          <Heart name=\"settings\" size={24} color=\"black\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{ marginRight: 20 }}\n          onPress={() => navigation.navigate('searchScreen')}\n        >\n          <MagnifyingGlass name=\"heart\" size={24} color=\"black\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{ marginRight: 100 }}\n          onPress={() => navigation.navigate('settingScreen')}\n        >\n          <GearSix name=\"search\" size={24} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  return (\n    <UserProvider>\n    <NavigationContainer>\n    <Stack.Navigator\n          screenOptions={{\n            headerRight: () => <HeaderRight />,\n          }}\n          initialRouteName=\"homeScreen\"\n        >\n        <Stack.Screen name=\"homeScreen\" component={HomeScreen} />\n        <Stack.Screen name=\"detailScreen\" component={DetailScreen} />\n        <Stack.Screen name=\"searchScreen\" component={SearchScreen} />\n        <Stack.Screen name=\"favoriteScreen\" component={FavoriteScreen} />\n        <Stack.Screen name=\"settingScreen\" component={SettingScreen}  />\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n    </UserProvider>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}