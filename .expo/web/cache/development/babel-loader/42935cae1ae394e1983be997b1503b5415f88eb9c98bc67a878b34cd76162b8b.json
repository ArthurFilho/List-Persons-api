{"ast":null,"code":"import React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ThemeScreen from \"../../component/theme\";\nimport stylesTheme from \"../../styles\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar settingScreen = function settingScreen() {\n  var _useContext = useContext(UserContext),\n    theme = _useContext.theme,\n    fontSize = _useContext.fontSize,\n    ButtonChangeFontSmall = _useContext.ButtonChangeFontSmall,\n    ButtonChangeFontDefault = _useContext.ButtonChangeFontDefault;\n  var componentStyle = theme ? stylesTheme[theme] : null;\n  if (!componentStyle) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: [styles.mainView, componentStyle.theme.mainView],\n    children: [_jsx(Text, {\n      style: [styles.textTittle, componentStyle.theme.text, componentStyle.fontSize],\n      children: \"Configura\\xE7\\xF5es\"\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Button, {\n        title: \"Small\",\n        onPress: function onPress() {\n          return ButtonChangeFontSmall('fontSmall');\n        },\n        style: fontSize === 'fontSmall' ? styles.activeButton : null\n      }), _jsx(Button, {\n        title: \"Default\",\n        onPress: function onPress() {\n          return ButtonChangeFontDefault('fontDefault');\n        },\n        style: fontSize === 'fontDefault' ? styles.activeButton : null\n      }), _jsx(Button, {\n        title: \"Giant\",\n        onPress: function onPress() {\n          return ButtonChangeFontGiant('fontGiant');\n        },\n        style: fontSize === 'fontGiant' ? styles.activeButton : null\n      })]\n    }), _jsx(ThemeScreen, {})]\n  });\n};\nvar styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20\n  }\n});\nexport default settingScreen;","map":{"version":3,"names":["React","useContext","useState","StyleSheet","Text","View","Button","ThemeScreen","stylesTheme","UserContext","jsx","_jsx","jsxs","_jsxs","settingScreen","_useContext","theme","fontSize","ButtonChangeFontSmall","ButtonChangeFontDefault","componentStyle","style","styles","mainView","children","textTittle","text","buttonsContainer","title","onPress","activeButton","ButtonChangeFontGiant","create","justifyContent","padding","marginBottom"],"sources":["C:/Users/Meu Computador/Documents/programação/activity/src/screens/settingsScreen/index.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { StyleSheet, Text, View, Button} from 'react-native'\nimport ThemeScreen from '../../component/theme'\nimport stylesTheme from '../../styles'\nimport { UserContext } from '../../contexts/userContext'\n\nconst settingScreen = () => {\n\n  const { theme, fontSize, ButtonChangeFontSmall, ButtonChangeFontDefault } = useContext(UserContext)\n\n  const componentStyle = theme ? stylesTheme[theme] : null;\n\n  if (!componentStyle) {\n    return null; \n  }\n\n  return (\n    <View style={[styles.mainView, componentStyle.theme.mainView]}>\n      <Text style={[styles.textTittle, componentStyle.theme.text, componentStyle.fontSize]}>Configurações</Text>\n      <View style={styles.buttonsContainer}>\n        <Button\n          title=\"Small\"\n          onPress={() => ButtonChangeFontSmall('fontSmall')}\n          style={fontSize === 'fontSmall' ? styles.activeButton : null}\n        />\n        <Button\n          title=\"Default\"\n          onPress={() => ButtonChangeFontDefault('fontDefault')}\n          style={fontSize === 'fontDefault' ? styles.activeButton : null}\n        />\n        <Button\n          title=\"Giant\"\n          onPress={() => ButtonChangeFontGiant('fontGiant')}\n          style={fontSize === 'fontGiant' ? styles.activeButton : null}\n        />\n      </View>\n      <ThemeScreen />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  mainView: {\n    justifyContent: 'center',\n    padding: 50\n  },\n  textTittle: {\n    fontSize: 35,\n    marginBottom: 20,\n  },\n})\n\nexport default settingScreen"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEnD,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAClB,SAASC,WAAW;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAE1B,IAAAC,WAAA,GAA4Ed,UAAU,CAACQ,WAAW,CAAC;IAA3FO,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;IAAEC,qBAAqB,GAAAH,WAAA,CAArBG,qBAAqB;IAAEC,uBAAuB,GAAAJ,WAAA,CAAvBI,uBAAuB;EAEvE,IAAMC,cAAc,GAAGJ,KAAK,GAAGR,WAAW,CAACQ,KAAK,CAAC,GAAG,IAAI;EAExD,IAAI,CAACI,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACEP,KAAA,CAACR,IAAI;IAACgB,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAEH,cAAc,CAACJ,KAAK,CAACO,QAAQ,CAAE;IAAAC,QAAA,GAC5Db,IAAA,CAACP,IAAI;MAACiB,KAAK,EAAE,CAACC,MAAM,CAACG,UAAU,EAAEL,cAAc,CAACJ,KAAK,CAACU,IAAI,EAAEN,cAAc,CAACH,QAAQ,CAAE;MAAAO,QAAA,EAAC;IAAa,EAAO,EAC1GX,KAAA,CAACR,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACK,gBAAiB;MAAAH,QAAA,GACnCb,IAAA,CAACL,MAAM;QACLsB,KAAK,EAAC,OAAO;QACbC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMX,qBAAqB,CAAC,WAAW,CAAC;QAAA,CAAC;QAClDG,KAAK,EAAEJ,QAAQ,KAAK,WAAW,GAAGK,MAAM,CAACQ,YAAY,GAAG;MAAK,EAC7D,EACFnB,IAAA,CAACL,MAAM;QACLsB,KAAK,EAAC,SAAS;QACfC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,uBAAuB,CAAC,aAAa,CAAC;QAAA,CAAC;QACtDE,KAAK,EAAEJ,QAAQ,KAAK,aAAa,GAAGK,MAAM,CAACQ,YAAY,GAAG;MAAK,EAC/D,EACFnB,IAAA,CAACL,MAAM;QACLsB,KAAK,EAAC,OAAO;QACbC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAME,qBAAqB,CAAC,WAAW,CAAC;QAAA,CAAC;QAClDV,KAAK,EAAEJ,QAAQ,KAAK,WAAW,GAAGK,MAAM,CAACQ,YAAY,GAAG;MAAK,EAC7D;IAAA,EACG,EACPnB,IAAA,CAACJ,WAAW,KAAG;EAAA,EACV;AAEX,CAAC;AAED,IAAMe,MAAM,GAAGnB,UAAU,CAAC6B,MAAM,CAAC;EAC/BT,QAAQ,EAAE;IACRU,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDT,UAAU,EAAE;IACVR,QAAQ,EAAE,EAAE;IACZkB,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAerB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}